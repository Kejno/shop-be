{"version":3,"sources":["webpack://shop-be/../node_modules/pg-connection-string/index.js","webpack://shop-be/../node_modules/pg-int8/index.js","webpack://shop-be/../node_modules/pg-pool/index.js","webpack://shop-be/../node_modules/pg-protocol/dist/buffer-reader.js","webpack://shop-be/../node_modules/pg-protocol/dist/buffer-writer.js","webpack://shop-be/../node_modules/pg-protocol/dist/index.js","webpack://shop-be/../node_modules/pg-protocol/dist/messages.js","webpack://shop-be/../node_modules/pg-protocol/dist/parser.js","webpack://shop-be/../node_modules/pg-protocol/dist/serializer.js","webpack://shop-be/../node_modules/pg-types/index.js","webpack://shop-be/../node_modules/pg-types/lib/arrayParser.js","webpack://shop-be/../node_modules/pg-types/lib/binaryParsers.js","webpack://shop-be/../node_modules/pg-types/lib/builtins.js","webpack://shop-be/../node_modules/pg-types/lib/textParsers.js","webpack://shop-be/../node_modules/pg/lib/client.js","webpack://shop-be/../node_modules/pg/lib/connection-parameters.js","webpack://shop-be/../node_modules/pg/lib/connection.js","webpack://shop-be/../node_modules/pg/lib/defaults.js","webpack://shop-be/../node_modules/pg/lib/index.js","webpack://shop-be/../node_modules/pg/lib/native/client.js","webpack://shop-be/../node_modules/pg/lib/native/index.js","webpack://shop-be/../node_modules/pg/lib/native/query.js","webpack://shop-be/../node_modules/pg/lib/query.js","webpack://shop-be/../node_modules/pg/lib/result.js","webpack://shop-be/../node_modules/pg/lib/sasl.js","webpack://shop-be/../node_modules/pg/lib/type-overrides.js","webpack://shop-be/../node_modules/pg/lib/utils.js","webpack://shop-be/../node_modules/pgpass/lib/helper.js","webpack://shop-be/../node_modules/pgpass/lib/index.js","webpack://shop-be/../node_modules/postgres-array/index.js","webpack://shop-be/../node_modules/postgres-bytea/index.js","webpack://shop-be/../node_modules/postgres-date/index.js","webpack://shop-be/../node_modules/postgres-interval/index.js","webpack://shop-be/../node_modules/split2/index.js","webpack://shop-be/../node_modules/xtend/mutable.js","webpack://shop-be/./handlers/getAllProducts.js","webpack://shop-be/./handlers/getProductById.js","webpack://shop-be/./handlers/createProduct.js","webpack://shop-be/external \"assert\"","webpack://shop-be/external \"crypto\"","webpack://shop-be/external \"dns\"","webpack://shop-be/external \"events\"","webpack://shop-be/external \"fs\"","webpack://shop-be/external \"net\"","webpack://shop-be/external \"path\"","webpack://shop-be/external \"readable-stream\"","webpack://shop-be/external \"stream\"","webpack://shop-be/external \"string_decoder\"","webpack://shop-be/external \"tls\"","webpack://shop-be/external \"url\"","webpack://shop-be/external \"util\"","webpack://shop-be/webpack/bootstrap","webpack://shop-be/webpack/startup","webpack://shop-be/webpack/runtime/define property getters","webpack://shop-be/webpack/runtime/hasOwnProperty shorthand","webpack://shop-be/webpack/runtime/make namespace object"],"names":["url","fs","parse","str","charAt","host","config","split","database","result","test","encodeURI","replace","query","k","Array","isArray","length","auth","user","password","splice","join","port","protocol","decodeURI","pathname","db","client_encoding","encoding","hostname","pathnameSplit","decodeURIComponent","slice","ssl","sslcert","sslkey","sslrootcert","sslmode","cert","readFileSync","toString","key","ca","rejectUnauthorized","module","exports","BASE","buffer","high","readInt32BE","low","readUInt32BE","sign","carry","t","digits","pad","l","i","EventEmitter","NOOP","removeWhere","list","predicate","findIndex","undefined","IdleItem","client","idleListener","timeoutId","this","PendingItem","callback","promisify","Promise","rej","res","err","resolve","reject","options","Client","super","Object","assign","defineProperty","configurable","enumerable","writable","value","max","poolSize","maxUses","Infinity","log","global","idleTimeoutMillis","_clients","_idle","_pendingQueue","_endCallback","ending","ended","map","item","_remove","_isFull","pendingItem","shift","idleItem","pop","clearTimeout","_acquireClient","newClient","Error","removed","filter","c","end","emit","cb","response","process","nextTick","_pulseQueue","connectionTimeoutMillis","push","queueCallback","done","tid","setTimeout","timedOut","pool","removeListener","on","makeIdleListener","timeoutHit","connection","stream","destroy","connect","message","isNew","release","_releaseOnce","verify","released","throwOnDoubleRelease","_release","_poolUseCount","_queryable","_ending","text","values","setImmediate","clientReleased","onError","once","promised","emptyBuffer","Buffer","allocUnsafe","BufferReader","offset","readInt16BE","start","Writer","size","headerPosition","oldBuffer","newSize","copy","num","ensure","string","len","byteLength","write","otherBuffer","code","writeInt32BE","messages_1","DatabaseError","serializer_1","serialize","parser_1","parser","Parser","parseComplete","name","bindComplete","closeComplete","noData","portalSuspended","replicationStart","emptyQuery","copyDone","CopyDataMessage","chunk","CopyResponse","binary","columnCount","columnTypes","Field","tableID","columnID","dataTypeID","dataTypeSize","dataTypeModifier","format","RowDescriptionMessage","fieldCount","fields","ParameterStatusMessage","parameterName","parameterValue","AuthenticationMD5Password","salt","BackendKeyDataMessage","processID","secretKey","NotificationResponseMessage","processId","channel","payload","ReadyForQueryMessage","status","CommandCompleteMessage","DataRowMessage","NoticeMessage","__importDefault","mod","__esModule","buffer_reader_1","assert_1","opts","_a","_b","bufferLength","bufferOffset","reader","mode","mergeBuffer","bufferFullLength","CODE_LENGTH","fullMessageLength","handlePacket","newLength","newBuffer","newBufferLength","bytes","parseDataRowMessage","parseCommandCompleteMessage","parseReadyForQueryMessage","parseNotificationMessage","parseAuthenticationResponse","parseParameterStatusMessage","parseBackendKeyData","parseErrorMessage","parseRowDescriptionMessage","parseCopyInMessage","parseCopyOutMessage","parseCopyData","default","fail","setBuffer","cstring","parseCopyMessage","messageName","isBinary","byte","int16","int32","parseField","mechanism","mechanisms","data","fieldType","messageValue","M","severity","S","C","detail","D","hint","H","position","P","internalPosition","p","internalQuery","q","where","W","schema","s","table","column","dataType","d","constraint","n","file","F","line","L","routine","R","buffer_writer_1","writer","emptyArray","paramWriter","emptyExecute","from","cstringMessage","emptyDescribePortal","addCString","flush","emptyDescribeStatement","codeOnlyBuffer","flushBuffer","syncBuffer","endBuffer","copyDoneBuffer","startup","addInt16","keys","bodyBuffer","addInt32","add","requestSsl","sendSASLInitialResponseMessage","initialResponse","addString","sendSCRAMClientFinalMessage","additionalData","console","error","types","bind","portal","statement","valueMapper","mappedVal","writeValues","execute","rows","portalLength","buff","writeUInt32BE","describe","msg","type","close","sync","copyData","copyFail","cancel","writeInt16BE","textParsers","binaryParsers","arrayParser","builtinTypes","getTypeParser","oid","typeParsers","noParse","setTypeParser","parseFn","builtins","val","String","init","converter","array","create","source","transform","parseInt64","parseBits","bits","invert","lastValue","newValue","Math","pow","offsetBytes","inv","mask","firstBits","lastBits","parseFloatFromBits","precisionBits","exponentBits","bias","exponent","precisionBitsCounter","mantissa","NaN","parseInt16","parseInt32","parseFloat32","parseFloat64","parseNumeric","weight","ndigits","scale","round","parseDate","isUTC","rawValue","Date","setTime","getTime","getTimezoneOffset","usec","getMicroSeconds","setMicroSeconds","getUTCMicroSeconds","parseArray","dim","elementType","dims","parseElement","dimension","count","unshift","parseText","parseBool","register","BOOL","BYTEA","CHAR","INT8","INT2","INT4","REGPROC","TEXT","OID","TID","XID","CID","JSON","XML","PG_NODE_TREE","SMGR","PATH","POLYGON","CIDR","FLOAT4","FLOAT8","ABSTIME","RELTIME","TINTERVAL","CIRCLE","MACADDR8","MONEY","MACADDR","INET","ACLITEM","BPCHAR","VARCHAR","DATE","TIME","TIMESTAMP","TIMESTAMPTZ","INTERVAL","TIMETZ","BIT","VARBIT","NUMERIC","REFCURSOR","REGPROCEDURE","REGOPER","REGOPERATOR","REGCLASS","REGTYPE","UUID","TXID_SNAPSHOT","PG_LSN","PG_NDISTINCT","PG_DEPENDENCIES","TSVECTOR","TSQUERY","GTSVECTOR","REGCONFIG","REGDICTIONARY","JSONB","REGNAMESPACE","REGROLE","parseInterval","parseByteA","allowNull","fn","parseBoolArray","parseBaseTenInt","parseInt","parseIntegerArray","parseBigIntegerArray","entry","parseBigInteger","trim","parsePointArray","parsePoint","parseFloatArray","parseFloat","parseStringArray","parseDateArray","parseIntervalArray","parseByteAArray","parseInteger","valStr","parseJsonArray","substring","x","y","parseCircle","point","radius","pointParsed","utils","sasl","pgPass","TypeOverrides","ConnectionParameters","Query","defaults","Connection","connectionParameters","replication","_Promise","_types","_connecting","_connected","_connectionError","keepAlive","keepAliveInitialDelayMillis","queryQueue","_connectionTimeoutMillis","enqueueError","handleError","activeQuery","forEach","self","con","_connectionCallback","connectionTimeoutHandle","indexOf","getStartupConf","_attachListeners","_errorAllQueries","_handleErrorEvent","_connect","_handleAuthCleartextPassword","_handleAuthMD5Password","_handleAuthSASL","_handleAuthSASLContinue","_handleAuthSASLFinal","_handleBackendKeyData","_handleErrorMessage","_handleReadyForQuery","_handleNotice","_handleRowDescription","_handleDataRow","_handlePortalSuspended","_handleEmptyQuery","_handleCommandComplete","_handleParseComplete","_handleCopyInResponse","_handleCopyData","_handleNotification","then","pass","TypeError","catch","_checkPgPass","hashedPassword","postgresMd5PasswordHash","saslSession","startSession","continueSession","finalizeSession","readyForQuery","handleReadyForQuery","_pulseQueryQueue","_handleErrorWhileConnecting","handleRowDescription","handleDataRow","handlePortalSuspended","handleEmptyQuery","handleCommandComplete","parsedStatements","handleCopyInResponse","handleCopyData","params","appName","application_name","fallback_application_name","statement_timeout","idle_in_transaction_session_timeout","hasBackslash","escaped","hasExecuted","queryError","submit","readTimeout","readTimeoutTimer","queryCallback","query_timeout","index","_result","dns","envVar","env","toUpperCase","quoteParamValue","paramName","connectionString","PGSSLMODE","readSSLConfigFromEnvironment","isDomainSocket","connect_timeout","PGCONNECT_TIMEOUT","floor","keepalives","keepalives_idle","lookup","address","net","Socket","_keepAlive","_keepAliveInitialDelayMillis","lastBuffer","_emitMessage","eventName","setNoDelay","setKeepAlive","reportStreamError","attachListeners","tls","socket","isIP","servername","_send","platform","USERNAME","USER","parseInputDatesAsUTC","pgTypes","__defineSetter__","Pool","poolFactory","PG","clientConstructor","_pools","NODE_PG_FORCE_NATIVE","native","Native","util","NativeQuery","call","_queryQueue","cp","namedQueries","inherits","prototype","_hasActiveQuery","_activeQuery","getLibpqConnectionString","conString","relname","extra","resolveOut","rejectOut","state","initialConnection","normalizeQueryConfig","_arrayMode","rowMode","_emitRowEvents","event","errorFieldMap","sqlState","statementPosition","messagePrimary","context","schemaName","tableName","columnName","dataTypeName","constraintName","sourceFile","sourceLine","sourceFunction","pq","resultErrorFields","onSuccess","onFailure","_getPromise","_promise","_once","arrayMode","after","results","rowOfRows","row","domain","prepareValue","prepare","vals","Result","_rowMode","_results","isPreparedStatement","_canceledDueToError","command","_checkForMultirow","addFields","_accumulateRows","listeners","parseRow","addRow","addCommandComplete","previous","requiresPreparation","_getRows","hasBeenParsed","sendCopyFail","matchRegexp","rowCount","_parsers","RowCtor","rowAsArray","_parseRowAsArray","match","exec","rowData","fieldDescriptions","desc","crypto","xorBuffers","a","b","isBuffer","j","createHMAC","createHmac","update","digest","clientNonce","randomBytes","session","serverData","sv","nonce","iteration","part","substr","extractVariablesFromFirstServerMessage","startsWith","saltedPassword","saltBytes","iterations","ui1","concat","ui","Hi","clientKey","storedKey","createHash","clientFirstMessageBare","serverFirstMessage","clientFinalMessageWithoutProof","authMessage","clientProof","serverKey","serverSignatureBytes","serverSignature","userTypes","getOverrides","arrayString","seen","ArrayBuffer","isView","buf","byteOffset","date","year","getUTCFullYear","isBCYear","abs","ret","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","dateToStringUTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","dateToString","toPostgres","stringify","prepareObject","number","md5","inner","path","Stream","isWin","warnStream","stderr","fieldNames","nrOfFields","passKey","warn","isWritable","args","arguments","apply","get","set","warnTo","old","getFileName","rawEnv","PGPASSFILE","APPDATA","HOME","usePgPass","stats","fname","hasOwnProperty","matcher","connInfo","reduce","prev","field","idx","Number","getPassword","lineStream","pipe","onErr","parseLine","isValidEntry","curChar","prevChar","fieldIdx","startIdx","obj","addToObj","i0","i1","rules","0","1","isFinite","2","3","4","rule","helper","stat","st","createReadStream","ArrayParser","identity","entries","recorded","character","includeEmpty","isEof","nextCharacter","nested","quote","consumeDimensions","record","newEntry","input","output","fromCharCode","backslashes","DATE_TIME","TIME_ZONE","INFINITY","bcYearToNegativeYear","is0To99","isoDate","matches","month","day","setFullYear","isBC","hour","minute","second","ms","endsWith","zone","timeZoneOffset","UTC","setUTCFullYear","extend","PostgresInterval","raw","interval","isNegative","positions","parsed","property","fraction","microseconds","negatives","properties","filtered","milliseconds","toFixed","propertiesISOEquivalent","years","months","days","hours","minutes","seconds","dateProperties","timeProperties","toISOString","toISO","buildProperty","NUMBER","RegExp","regexString","Transform","StringDecoder","kLast","Symbol","kDecoder","enc","overflow","mapper","maxLength","skipOverflow","noop","incoming","readableObjectMode","target","PG_HOST","PG_PORT","PG_DATABASE","PG_USERNAME","PG_PASSWORD","dbOptions","getAllProducts","async","products","statusCode","body","getProductById","pathParameters","product","id","createProduct","image","description","brand","category","price","rating","numReviews","newProduct","newProductStock","require","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","definition","o","prop","r","toStringTag"],"mappings":"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","file":"handler.js","sourcesContent":["'use strict'\n\nvar url = require('url')\nvar fs = require('fs')\n\n//Parse method copied from https://github.com/brianc/node-postgres\n//Copyright (c) 2010-2014 Brian Carlson (brian.m.carlson@gmail.com)\n//MIT License\n\n//parses a connection string\nfunction parse(str) {\n  //unix socket\n  if (str.charAt(0) === '/') {\n    var config = str.split(' ')\n    return { host: config[0], database: config[1] }\n  }\n\n  // url parse expects spaces encoded as %20\n  var result = url.parse(\n    / |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.test(str) ? encodeURI(str).replace(/\\%25(\\d\\d)/g, '%$1') : str,\n    true\n  )\n  var config = result.query\n  for (var k in config) {\n    if (Array.isArray(config[k])) {\n      config[k] = config[k][config[k].length - 1]\n    }\n  }\n\n  var auth = (result.auth || ':').split(':')\n  config.user = auth[0]\n  config.password = auth.splice(1).join(':')\n\n  config.port = result.port\n  if (result.protocol == 'socket:') {\n    config.host = decodeURI(result.pathname)\n    config.database = result.query.db\n    config.client_encoding = result.query.encoding\n    return config\n  }\n  if (!config.host) {\n    // Only set the host if there is no equivalent query param.\n    config.host = result.hostname\n  }\n\n  // If the host is missing it might be a URL-encoded path to a socket.\n  var pathname = result.pathname\n  if (!config.host && pathname && /^%2f/i.test(pathname)) {\n    var pathnameSplit = pathname.split('/')\n    config.host = decodeURIComponent(pathnameSplit[0])\n    pathname = pathnameSplit.splice(1).join('/')\n  }\n  // result.pathname is not always guaranteed to have a '/' prefix (e.g. relative urls)\n  // only strip the slash if it is present.\n  if (pathname && pathname.charAt(0) === '/') {\n    pathname = pathname.slice(1) || null\n  }\n  config.database = pathname && decodeURI(pathname)\n\n  if (config.ssl === 'true' || config.ssl === '1') {\n    config.ssl = true\n  }\n\n  if (config.ssl === '0') {\n    config.ssl = false\n  }\n\n  if (config.sslcert || config.sslkey || config.sslrootcert || config.sslmode) {\n    config.ssl = {}\n  }\n\n  if (config.sslcert) {\n    config.ssl.cert = fs.readFileSync(config.sslcert).toString()\n  }\n\n  if (config.sslkey) {\n    config.ssl.key = fs.readFileSync(config.sslkey).toString()\n  }\n\n  if (config.sslrootcert) {\n    config.ssl.ca = fs.readFileSync(config.sslrootcert).toString()\n  }\n\n  switch (config.sslmode) {\n    case 'disable': {\n      config.ssl = false\n      break\n    }\n    case 'prefer':\n    case 'require':\n    case 'verify-ca':\n    case 'verify-full': {\n      break\n    }\n    case 'no-verify': {\n      config.ssl.rejectUnauthorized = false\n      break\n    }\n  }\n\n  return config\n}\n\nmodule.exports = parse\n\nparse.parse = parse\n","'use strict';\n\n// selected so (BASE - 1) * 0x100000000 + 0xffffffff is a safe integer\nvar BASE = 1000000;\n\nfunction readInt8(buffer) {\n\tvar high = buffer.readInt32BE(0);\n\tvar low = buffer.readUInt32BE(4);\n\tvar sign = '';\n\n\tif (high < 0) {\n\t\thigh = ~high + (low === 0);\n\t\tlow = (~low + 1) >>> 0;\n\t\tsign = '-';\n\t}\n\n\tvar result = '';\n\tvar carry;\n\tvar t;\n\tvar digits;\n\tvar pad;\n\tvar l;\n\tvar i;\n\n\t{\n\t\tcarry = high % BASE;\n\t\thigh = high / BASE >>> 0;\n\n\t\tt = 0x100000000 * carry + low;\n\t\tlow = t / BASE >>> 0;\n\t\tdigits = '' + (t - BASE * low);\n\n\t\tif (low === 0 && high === 0) {\n\t\t\treturn sign + digits + result;\n\t\t}\n\n\t\tpad = '';\n\t\tl = 6 - digits.length;\n\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tpad += '0';\n\t\t}\n\n\t\tresult = pad + digits + result;\n\t}\n\n\t{\n\t\tcarry = high % BASE;\n\t\thigh = high / BASE >>> 0;\n\n\t\tt = 0x100000000 * carry + low;\n\t\tlow = t / BASE >>> 0;\n\t\tdigits = '' + (t - BASE * low);\n\n\t\tif (low === 0 && high === 0) {\n\t\t\treturn sign + digits + result;\n\t\t}\n\n\t\tpad = '';\n\t\tl = 6 - digits.length;\n\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tpad += '0';\n\t\t}\n\n\t\tresult = pad + digits + result;\n\t}\n\n\t{\n\t\tcarry = high % BASE;\n\t\thigh = high / BASE >>> 0;\n\n\t\tt = 0x100000000 * carry + low;\n\t\tlow = t / BASE >>> 0;\n\t\tdigits = '' + (t - BASE * low);\n\n\t\tif (low === 0 && high === 0) {\n\t\t\treturn sign + digits + result;\n\t\t}\n\n\t\tpad = '';\n\t\tl = 6 - digits.length;\n\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tpad += '0';\n\t\t}\n\n\t\tresult = pad + digits + result;\n\t}\n\n\t{\n\t\tcarry = high % BASE;\n\t\tt = 0x100000000 * carry + low;\n\t\tdigits = '' + t % BASE;\n\n\t\treturn sign + digits + result;\n\t}\n}\n\nmodule.exports = readInt8;\n","'use strict'\nconst EventEmitter = require('events').EventEmitter\n\nconst NOOP = function () {}\n\nconst removeWhere = (list, predicate) => {\n  const i = list.findIndex(predicate)\n\n  return i === -1 ? undefined : list.splice(i, 1)[0]\n}\n\nclass IdleItem {\n  constructor(client, idleListener, timeoutId) {\n    this.client = client\n    this.idleListener = idleListener\n    this.timeoutId = timeoutId\n  }\n}\n\nclass PendingItem {\n  constructor(callback) {\n    this.callback = callback\n  }\n}\n\nfunction throwOnDoubleRelease() {\n  throw new Error('Release called on client which has already been released to the pool.')\n}\n\nfunction promisify(Promise, callback) {\n  if (callback) {\n    return { callback: callback, result: undefined }\n  }\n  let rej\n  let res\n  const cb = function (err, client) {\n    err ? rej(err) : res(client)\n  }\n  const result = new Promise(function (resolve, reject) {\n    res = resolve\n    rej = reject\n  })\n  return { callback: cb, result: result }\n}\n\nfunction makeIdleListener(pool, client) {\n  return function idleListener(err) {\n    err.client = client\n\n    client.removeListener('error', idleListener)\n    client.on('error', () => {\n      pool.log('additional client error after disconnection due to error', err)\n    })\n    pool._remove(client)\n    // TODO - document that once the pool emits an error\n    // the client has already been closed & purged and is unusable\n    pool.emit('error', err, client)\n  }\n}\n\nclass Pool extends EventEmitter {\n  constructor(options, Client) {\n    super()\n    this.options = Object.assign({}, options)\n\n    if (options != null && 'password' in options) {\n      // \"hiding\" the password so it doesn't show up in stack traces\n      // or if the client is console.logged\n      Object.defineProperty(this.options, 'password', {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: options.password,\n      })\n    }\n    if (options != null && options.ssl && options.ssl.key) {\n      // \"hiding\" the ssl->key so it doesn't show up in stack traces\n      // or if the client is console.logged\n      Object.defineProperty(this.options.ssl, 'key', {\n        enumerable: false,\n      })\n    }\n\n    this.options.max = this.options.max || this.options.poolSize || 10\n    this.options.maxUses = this.options.maxUses || Infinity\n    this.log = this.options.log || function () {}\n    this.Client = this.options.Client || Client || require('pg').Client\n    this.Promise = this.options.Promise || global.Promise\n\n    if (typeof this.options.idleTimeoutMillis === 'undefined') {\n      this.options.idleTimeoutMillis = 10000\n    }\n\n    this._clients = []\n    this._idle = []\n    this._pendingQueue = []\n    this._endCallback = undefined\n    this.ending = false\n    this.ended = false\n  }\n\n  _isFull() {\n    return this._clients.length >= this.options.max\n  }\n\n  _pulseQueue() {\n    this.log('pulse queue')\n    if (this.ended) {\n      this.log('pulse queue ended')\n      return\n    }\n    if (this.ending) {\n      this.log('pulse queue on ending')\n      if (this._idle.length) {\n        this._idle.slice().map((item) => {\n          this._remove(item.client)\n        })\n      }\n      if (!this._clients.length) {\n        this.ended = true\n        this._endCallback()\n      }\n      return\n    }\n    // if we don't have any waiting, do nothing\n    if (!this._pendingQueue.length) {\n      this.log('no queued requests')\n      return\n    }\n    // if we don't have any idle clients and we have no more room do nothing\n    if (!this._idle.length && this._isFull()) {\n      return\n    }\n    const pendingItem = this._pendingQueue.shift()\n    if (this._idle.length) {\n      const idleItem = this._idle.pop()\n      clearTimeout(idleItem.timeoutId)\n      const client = idleItem.client\n      const idleListener = idleItem.idleListener\n\n      return this._acquireClient(client, pendingItem, idleListener, false)\n    }\n    if (!this._isFull()) {\n      return this.newClient(pendingItem)\n    }\n    throw new Error('unexpected condition')\n  }\n\n  _remove(client) {\n    const removed = removeWhere(this._idle, (item) => item.client === client)\n\n    if (removed !== undefined) {\n      clearTimeout(removed.timeoutId)\n    }\n\n    this._clients = this._clients.filter((c) => c !== client)\n    client.end()\n    this.emit('remove', client)\n  }\n\n  connect(cb) {\n    if (this.ending) {\n      const err = new Error('Cannot use a pool after calling end on the pool')\n      return cb ? cb(err) : this.Promise.reject(err)\n    }\n\n    const response = promisify(this.Promise, cb)\n    const result = response.result\n\n    // if we don't have to connect a new client, don't do so\n    if (this._clients.length >= this.options.max || this._idle.length) {\n      // if we have idle clients schedule a pulse immediately\n      if (this._idle.length) {\n        process.nextTick(() => this._pulseQueue())\n      }\n\n      if (!this.options.connectionTimeoutMillis) {\n        this._pendingQueue.push(new PendingItem(response.callback))\n        return result\n      }\n\n      const queueCallback = (err, res, done) => {\n        clearTimeout(tid)\n        response.callback(err, res, done)\n      }\n\n      const pendingItem = new PendingItem(queueCallback)\n\n      // set connection timeout on checking out an existing client\n      const tid = setTimeout(() => {\n        // remove the callback from pending waiters because\n        // we're going to call it with a timeout error\n        removeWhere(this._pendingQueue, (i) => i.callback === queueCallback)\n        pendingItem.timedOut = true\n        response.callback(new Error('timeout exceeded when trying to connect'))\n      }, this.options.connectionTimeoutMillis)\n\n      this._pendingQueue.push(pendingItem)\n      return result\n    }\n\n    this.newClient(new PendingItem(response.callback))\n\n    return result\n  }\n\n  newClient(pendingItem) {\n    const client = new this.Client(this.options)\n    this._clients.push(client)\n    const idleListener = makeIdleListener(this, client)\n\n    this.log('checking client timeout')\n\n    // connection timeout logic\n    let tid\n    let timeoutHit = false\n    if (this.options.connectionTimeoutMillis) {\n      tid = setTimeout(() => {\n        this.log('ending client due to timeout')\n        timeoutHit = true\n        // force kill the node driver, and let libpq do its teardown\n        client.connection ? client.connection.stream.destroy() : client.end()\n      }, this.options.connectionTimeoutMillis)\n    }\n\n    this.log('connecting new client')\n    client.connect((err) => {\n      if (tid) {\n        clearTimeout(tid)\n      }\n      client.on('error', idleListener)\n      if (err) {\n        this.log('client failed to connect', err)\n        // remove the dead client from our list of clients\n        this._clients = this._clients.filter((c) => c !== client)\n        if (timeoutHit) {\n          err.message = 'Connection terminated due to connection timeout'\n        }\n\n        // this client won’t be released, so move on immediately\n        this._pulseQueue()\n\n        if (!pendingItem.timedOut) {\n          pendingItem.callback(err, undefined, NOOP)\n        }\n      } else {\n        this.log('new client connected')\n\n        return this._acquireClient(client, pendingItem, idleListener, true)\n      }\n    })\n  }\n\n  // acquire a client for a pending work item\n  _acquireClient(client, pendingItem, idleListener, isNew) {\n    if (isNew) {\n      this.emit('connect', client)\n    }\n\n    this.emit('acquire', client)\n\n    client.release = this._releaseOnce(client, idleListener)\n\n    client.removeListener('error', idleListener)\n\n    if (!pendingItem.timedOut) {\n      if (isNew && this.options.verify) {\n        this.options.verify(client, (err) => {\n          if (err) {\n            client.release(err)\n            return pendingItem.callback(err, undefined, NOOP)\n          }\n\n          pendingItem.callback(undefined, client, client.release)\n        })\n      } else {\n        pendingItem.callback(undefined, client, client.release)\n      }\n    } else {\n      if (isNew && this.options.verify) {\n        this.options.verify(client, client.release)\n      } else {\n        client.release()\n      }\n    }\n  }\n\n  // returns a function that wraps _release and throws if called more than once\n  _releaseOnce(client, idleListener) {\n    let released = false\n\n    return (err) => {\n      if (released) {\n        throwOnDoubleRelease()\n      }\n\n      released = true\n      this._release(client, idleListener, err)\n    }\n  }\n\n  // release a client back to the poll, include an error\n  // to remove it from the pool\n  _release(client, idleListener, err) {\n    client.on('error', idleListener)\n\n    client._poolUseCount = (client._poolUseCount || 0) + 1\n\n    // TODO(bmc): expose a proper, public interface _queryable and _ending\n    if (err || this.ending || !client._queryable || client._ending || client._poolUseCount >= this.options.maxUses) {\n      if (client._poolUseCount >= this.options.maxUses) {\n        this.log('remove expended client')\n      }\n      this._remove(client)\n      this._pulseQueue()\n      return\n    }\n\n    // idle timeout\n    let tid\n    if (this.options.idleTimeoutMillis) {\n      tid = setTimeout(() => {\n        this.log('remove idle client')\n        this._remove(client)\n      }, this.options.idleTimeoutMillis)\n    }\n\n    this._idle.push(new IdleItem(client, idleListener, tid))\n    this._pulseQueue()\n  }\n\n  query(text, values, cb) {\n    // guard clause against passing a function as the first parameter\n    if (typeof text === 'function') {\n      const response = promisify(this.Promise, text)\n      setImmediate(function () {\n        return response.callback(new Error('Passing a function as the first parameter to pool.query is not supported'))\n      })\n      return response.result\n    }\n\n    // allow plain text query without values\n    if (typeof values === 'function') {\n      cb = values\n      values = undefined\n    }\n    const response = promisify(this.Promise, cb)\n    cb = response.callback\n\n    this.connect((err, client) => {\n      if (err) {\n        return cb(err)\n      }\n\n      let clientReleased = false\n      const onError = (err) => {\n        if (clientReleased) {\n          return\n        }\n        clientReleased = true\n        client.release(err)\n        cb(err)\n      }\n\n      client.once('error', onError)\n      this.log('dispatching query')\n      client.query(text, values, (err, res) => {\n        this.log('query dispatched')\n        client.removeListener('error', onError)\n        if (clientReleased) {\n          return\n        }\n        clientReleased = true\n        client.release(err)\n        if (err) {\n          return cb(err)\n        } else {\n          return cb(undefined, res)\n        }\n      })\n    })\n    return response.result\n  }\n\n  end(cb) {\n    this.log('ending')\n    if (this.ending) {\n      const err = new Error('Called end on pool more than once')\n      return cb ? cb(err) : this.Promise.reject(err)\n    }\n    this.ending = true\n    const promised = promisify(this.Promise, cb)\n    this._endCallback = promised.callback\n    this._pulseQueue()\n    return promised.result\n  }\n\n  get waitingCount() {\n    return this._pendingQueue.length\n  }\n\n  get idleCount() {\n    return this._idle.length\n  }\n\n  get totalCount() {\n    return this._clients.length\n  }\n}\nmodule.exports = Pool\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst emptyBuffer = Buffer.allocUnsafe(0);\nclass BufferReader {\n    constructor(offset = 0) {\n        this.offset = offset;\n        this.buffer = emptyBuffer;\n        // TODO(bmc): support non-utf8 encoding?\n        this.encoding = 'utf-8';\n    }\n    setBuffer(offset, buffer) {\n        this.offset = offset;\n        this.buffer = buffer;\n    }\n    int16() {\n        const result = this.buffer.readInt16BE(this.offset);\n        this.offset += 2;\n        return result;\n    }\n    byte() {\n        const result = this.buffer[this.offset];\n        this.offset++;\n        return result;\n    }\n    int32() {\n        const result = this.buffer.readInt32BE(this.offset);\n        this.offset += 4;\n        return result;\n    }\n    string(length) {\n        const result = this.buffer.toString(this.encoding, this.offset, this.offset + length);\n        this.offset += length;\n        return result;\n    }\n    cstring() {\n        const start = this.offset;\n        let end = start;\n        while (this.buffer[end++] !== 0) { }\n        this.offset = end;\n        return this.buffer.toString(this.encoding, start, end - 1);\n    }\n    bytes(length) {\n        const result = this.buffer.slice(this.offset, this.offset + length);\n        this.offset += length;\n        return result;\n    }\n}\nexports.BufferReader = BufferReader;\n//# sourceMappingURL=buffer-reader.js.map","\"use strict\";\n//binary data writer tuned for encoding binary specific to the postgres binary protocol\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Writer {\n    constructor(size = 256) {\n        this.size = size;\n        this.offset = 5;\n        this.headerPosition = 0;\n        this.buffer = Buffer.allocUnsafe(size);\n    }\n    ensure(size) {\n        var remaining = this.buffer.length - this.offset;\n        if (remaining < size) {\n            var oldBuffer = this.buffer;\n            // exponential growth factor of around ~ 1.5\n            // https://stackoverflow.com/questions/2269063/buffer-growth-strategy\n            var newSize = oldBuffer.length + (oldBuffer.length >> 1) + size;\n            this.buffer = Buffer.allocUnsafe(newSize);\n            oldBuffer.copy(this.buffer);\n        }\n    }\n    addInt32(num) {\n        this.ensure(4);\n        this.buffer[this.offset++] = (num >>> 24) & 0xff;\n        this.buffer[this.offset++] = (num >>> 16) & 0xff;\n        this.buffer[this.offset++] = (num >>> 8) & 0xff;\n        this.buffer[this.offset++] = (num >>> 0) & 0xff;\n        return this;\n    }\n    addInt16(num) {\n        this.ensure(2);\n        this.buffer[this.offset++] = (num >>> 8) & 0xff;\n        this.buffer[this.offset++] = (num >>> 0) & 0xff;\n        return this;\n    }\n    addCString(string) {\n        if (!string) {\n            this.ensure(1);\n        }\n        else {\n            var len = Buffer.byteLength(string);\n            this.ensure(len + 1); // +1 for null terminator\n            this.buffer.write(string, this.offset, 'utf-8');\n            this.offset += len;\n        }\n        this.buffer[this.offset++] = 0; // null terminator\n        return this;\n    }\n    addString(string = '') {\n        var len = Buffer.byteLength(string);\n        this.ensure(len);\n        this.buffer.write(string, this.offset);\n        this.offset += len;\n        return this;\n    }\n    add(otherBuffer) {\n        this.ensure(otherBuffer.length);\n        otherBuffer.copy(this.buffer, this.offset);\n        this.offset += otherBuffer.length;\n        return this;\n    }\n    join(code) {\n        if (code) {\n            this.buffer[this.headerPosition] = code;\n            //length is everything in this packet minus the code\n            const length = this.offset - (this.headerPosition + 1);\n            this.buffer.writeInt32BE(length, this.headerPosition + 1);\n        }\n        return this.buffer.slice(code ? 0 : 5, this.offset);\n    }\n    flush(code) {\n        var result = this.join(code);\n        this.offset = 5;\n        this.headerPosition = 0;\n        this.buffer = Buffer.allocUnsafe(this.size);\n        return result;\n    }\n}\nexports.Writer = Writer;\n//# sourceMappingURL=buffer-writer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst messages_1 = require(\"./messages\");\nexports.DatabaseError = messages_1.DatabaseError;\nconst serializer_1 = require(\"./serializer\");\nexports.serialize = serializer_1.serialize;\nconst parser_1 = require(\"./parser\");\nfunction parse(stream, callback) {\n    const parser = new parser_1.Parser();\n    stream.on('data', (buffer) => parser.parse(buffer, callback));\n    return new Promise((resolve) => stream.on('end', () => resolve()));\n}\nexports.parse = parse;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseComplete = {\n    name: \"parseComplete\" /* parseComplete */,\n    length: 5,\n};\nexports.bindComplete = {\n    name: \"bindComplete\" /* bindComplete */,\n    length: 5,\n};\nexports.closeComplete = {\n    name: \"closeComplete\" /* closeComplete */,\n    length: 5,\n};\nexports.noData = {\n    name: \"noData\" /* noData */,\n    length: 5,\n};\nexports.portalSuspended = {\n    name: \"portalSuspended\" /* portalSuspended */,\n    length: 5,\n};\nexports.replicationStart = {\n    name: \"replicationStart\" /* replicationStart */,\n    length: 4,\n};\nexports.emptyQuery = {\n    name: \"emptyQuery\" /* emptyQuery */,\n    length: 4,\n};\nexports.copyDone = {\n    name: \"copyDone\" /* copyDone */,\n    length: 4,\n};\nclass DatabaseError extends Error {\n    constructor(message, length, name) {\n        super(message);\n        this.length = length;\n        this.name = name;\n    }\n}\nexports.DatabaseError = DatabaseError;\nclass CopyDataMessage {\n    constructor(length, chunk) {\n        this.length = length;\n        this.chunk = chunk;\n        this.name = \"copyData\" /* copyData */;\n    }\n}\nexports.CopyDataMessage = CopyDataMessage;\nclass CopyResponse {\n    constructor(length, name, binary, columnCount) {\n        this.length = length;\n        this.name = name;\n        this.binary = binary;\n        this.columnTypes = new Array(columnCount);\n    }\n}\nexports.CopyResponse = CopyResponse;\nclass Field {\n    constructor(name, tableID, columnID, dataTypeID, dataTypeSize, dataTypeModifier, format) {\n        this.name = name;\n        this.tableID = tableID;\n        this.columnID = columnID;\n        this.dataTypeID = dataTypeID;\n        this.dataTypeSize = dataTypeSize;\n        this.dataTypeModifier = dataTypeModifier;\n        this.format = format;\n    }\n}\nexports.Field = Field;\nclass RowDescriptionMessage {\n    constructor(length, fieldCount) {\n        this.length = length;\n        this.fieldCount = fieldCount;\n        this.name = \"rowDescription\" /* rowDescription */;\n        this.fields = new Array(this.fieldCount);\n    }\n}\nexports.RowDescriptionMessage = RowDescriptionMessage;\nclass ParameterStatusMessage {\n    constructor(length, parameterName, parameterValue) {\n        this.length = length;\n        this.parameterName = parameterName;\n        this.parameterValue = parameterValue;\n        this.name = \"parameterStatus\" /* parameterStatus */;\n    }\n}\nexports.ParameterStatusMessage = ParameterStatusMessage;\nclass AuthenticationMD5Password {\n    constructor(length, salt) {\n        this.length = length;\n        this.salt = salt;\n        this.name = \"authenticationMD5Password\" /* authenticationMD5Password */;\n    }\n}\nexports.AuthenticationMD5Password = AuthenticationMD5Password;\nclass BackendKeyDataMessage {\n    constructor(length, processID, secretKey) {\n        this.length = length;\n        this.processID = processID;\n        this.secretKey = secretKey;\n        this.name = \"backendKeyData\" /* backendKeyData */;\n    }\n}\nexports.BackendKeyDataMessage = BackendKeyDataMessage;\nclass NotificationResponseMessage {\n    constructor(length, processId, channel, payload) {\n        this.length = length;\n        this.processId = processId;\n        this.channel = channel;\n        this.payload = payload;\n        this.name = \"notification\" /* notification */;\n    }\n}\nexports.NotificationResponseMessage = NotificationResponseMessage;\nclass ReadyForQueryMessage {\n    constructor(length, status) {\n        this.length = length;\n        this.status = status;\n        this.name = \"readyForQuery\" /* readyForQuery */;\n    }\n}\nexports.ReadyForQueryMessage = ReadyForQueryMessage;\nclass CommandCompleteMessage {\n    constructor(length, text) {\n        this.length = length;\n        this.text = text;\n        this.name = \"commandComplete\" /* commandComplete */;\n    }\n}\nexports.CommandCompleteMessage = CommandCompleteMessage;\nclass DataRowMessage {\n    constructor(length, fields) {\n        this.length = length;\n        this.fields = fields;\n        this.name = \"dataRow\" /* dataRow */;\n        this.fieldCount = fields.length;\n    }\n}\nexports.DataRowMessage = DataRowMessage;\nclass NoticeMessage {\n    constructor(length, message) {\n        this.length = length;\n        this.message = message;\n        this.name = \"notice\" /* notice */;\n    }\n}\nexports.NoticeMessage = NoticeMessage;\n//# sourceMappingURL=messages.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst messages_1 = require(\"./messages\");\nconst buffer_reader_1 = require(\"./buffer-reader\");\nconst assert_1 = __importDefault(require(\"assert\"));\n// every message is prefixed with a single bye\nconst CODE_LENGTH = 1;\n// every message has an int32 length which includes itself but does\n// NOT include the code in the length\nconst LEN_LENGTH = 4;\nconst HEADER_LENGTH = CODE_LENGTH + LEN_LENGTH;\nconst emptyBuffer = Buffer.allocUnsafe(0);\nclass Parser {\n    constructor(opts) {\n        var _a, _b;\n        this.buffer = emptyBuffer;\n        this.bufferLength = 0;\n        this.bufferOffset = 0;\n        this.reader = new buffer_reader_1.BufferReader();\n        if (((_a = opts) === null || _a === void 0 ? void 0 : _a.mode) === 'binary') {\n            throw new Error('Binary mode not supported yet');\n        }\n        this.mode = ((_b = opts) === null || _b === void 0 ? void 0 : _b.mode) || 'text';\n    }\n    parse(buffer, callback) {\n        this.mergeBuffer(buffer);\n        const bufferFullLength = this.bufferOffset + this.bufferLength;\n        let offset = this.bufferOffset;\n        while (offset + HEADER_LENGTH <= bufferFullLength) {\n            // code is 1 byte long - it identifies the message type\n            const code = this.buffer[offset];\n            // length is 1 Uint32BE - it is the length of the message EXCLUDING the code\n            const length = this.buffer.readUInt32BE(offset + CODE_LENGTH);\n            const fullMessageLength = CODE_LENGTH + length;\n            if (fullMessageLength + offset <= bufferFullLength) {\n                const message = this.handlePacket(offset + HEADER_LENGTH, code, length, this.buffer);\n                callback(message);\n                offset += fullMessageLength;\n            }\n            else {\n                break;\n            }\n        }\n        if (offset === bufferFullLength) {\n            // No more use for the buffer\n            this.buffer = emptyBuffer;\n            this.bufferLength = 0;\n            this.bufferOffset = 0;\n        }\n        else {\n            // Adjust the cursors of remainingBuffer\n            this.bufferLength = bufferFullLength - offset;\n            this.bufferOffset = offset;\n        }\n    }\n    mergeBuffer(buffer) {\n        if (this.bufferLength > 0) {\n            const newLength = this.bufferLength + buffer.byteLength;\n            const newFullLength = newLength + this.bufferOffset;\n            if (newFullLength > this.buffer.byteLength) {\n                // We can't concat the new buffer with the remaining one\n                let newBuffer;\n                if (newLength <= this.buffer.byteLength && this.bufferOffset >= this.bufferLength) {\n                    // We can move the relevant part to the beginning of the buffer instead of allocating a new buffer\n                    newBuffer = this.buffer;\n                }\n                else {\n                    // Allocate a new larger buffer\n                    let newBufferLength = this.buffer.byteLength * 2;\n                    while (newLength >= newBufferLength) {\n                        newBufferLength *= 2;\n                    }\n                    newBuffer = Buffer.allocUnsafe(newBufferLength);\n                }\n                // Move the remaining buffer to the new one\n                this.buffer.copy(newBuffer, 0, this.bufferOffset, this.bufferOffset + this.bufferLength);\n                this.buffer = newBuffer;\n                this.bufferOffset = 0;\n            }\n            // Concat the new buffer with the remaining one\n            buffer.copy(this.buffer, this.bufferOffset + this.bufferLength);\n            this.bufferLength = newLength;\n        }\n        else {\n            this.buffer = buffer;\n            this.bufferOffset = 0;\n            this.bufferLength = buffer.byteLength;\n        }\n    }\n    handlePacket(offset, code, length, bytes) {\n        switch (code) {\n            case 50 /* BindComplete */:\n                return messages_1.bindComplete;\n            case 49 /* ParseComplete */:\n                return messages_1.parseComplete;\n            case 51 /* CloseComplete */:\n                return messages_1.closeComplete;\n            case 110 /* NoData */:\n                return messages_1.noData;\n            case 115 /* PortalSuspended */:\n                return messages_1.portalSuspended;\n            case 99 /* CopyDone */:\n                return messages_1.copyDone;\n            case 87 /* ReplicationStart */:\n                return messages_1.replicationStart;\n            case 73 /* EmptyQuery */:\n                return messages_1.emptyQuery;\n            case 68 /* DataRow */:\n                return this.parseDataRowMessage(offset, length, bytes);\n            case 67 /* CommandComplete */:\n                return this.parseCommandCompleteMessage(offset, length, bytes);\n            case 90 /* ReadyForQuery */:\n                return this.parseReadyForQueryMessage(offset, length, bytes);\n            case 65 /* NotificationResponse */:\n                return this.parseNotificationMessage(offset, length, bytes);\n            case 82 /* AuthenticationResponse */:\n                return this.parseAuthenticationResponse(offset, length, bytes);\n            case 83 /* ParameterStatus */:\n                return this.parseParameterStatusMessage(offset, length, bytes);\n            case 75 /* BackendKeyData */:\n                return this.parseBackendKeyData(offset, length, bytes);\n            case 69 /* ErrorMessage */:\n                return this.parseErrorMessage(offset, length, bytes, \"error\" /* error */);\n            case 78 /* NoticeMessage */:\n                return this.parseErrorMessage(offset, length, bytes, \"notice\" /* notice */);\n            case 84 /* RowDescriptionMessage */:\n                return this.parseRowDescriptionMessage(offset, length, bytes);\n            case 71 /* CopyIn */:\n                return this.parseCopyInMessage(offset, length, bytes);\n            case 72 /* CopyOut */:\n                return this.parseCopyOutMessage(offset, length, bytes);\n            case 100 /* CopyData */:\n                return this.parseCopyData(offset, length, bytes);\n            default:\n                assert_1.default.fail(`unknown message code: ${code.toString(16)}`);\n        }\n    }\n    parseReadyForQueryMessage(offset, length, bytes) {\n        this.reader.setBuffer(offset, bytes);\n        const status = this.reader.string(1);\n        return new messages_1.ReadyForQueryMessage(length, status);\n    }\n    parseCommandCompleteMessage(offset, length, bytes) {\n        this.reader.setBuffer(offset, bytes);\n        const text = this.reader.cstring();\n        return new messages_1.CommandCompleteMessage(length, text);\n    }\n    parseCopyData(offset, length, bytes) {\n        const chunk = bytes.slice(offset, offset + (length - 4));\n        return new messages_1.CopyDataMessage(length, chunk);\n    }\n    parseCopyInMessage(offset, length, bytes) {\n        return this.parseCopyMessage(offset, length, bytes, \"copyInResponse\" /* copyInResponse */);\n    }\n    parseCopyOutMessage(offset, length, bytes) {\n        return this.parseCopyMessage(offset, length, bytes, \"copyOutResponse\" /* copyOutResponse */);\n    }\n    parseCopyMessage(offset, length, bytes, messageName) {\n        this.reader.setBuffer(offset, bytes);\n        const isBinary = this.reader.byte() !== 0;\n        const columnCount = this.reader.int16();\n        const message = new messages_1.CopyResponse(length, messageName, isBinary, columnCount);\n        for (let i = 0; i < columnCount; i++) {\n            message.columnTypes[i] = this.reader.int16();\n        }\n        return message;\n    }\n    parseNotificationMessage(offset, length, bytes) {\n        this.reader.setBuffer(offset, bytes);\n        const processId = this.reader.int32();\n        const channel = this.reader.cstring();\n        const payload = this.reader.cstring();\n        return new messages_1.NotificationResponseMessage(length, processId, channel, payload);\n    }\n    parseRowDescriptionMessage(offset, length, bytes) {\n        this.reader.setBuffer(offset, bytes);\n        const fieldCount = this.reader.int16();\n        const message = new messages_1.RowDescriptionMessage(length, fieldCount);\n        for (let i = 0; i < fieldCount; i++) {\n            message.fields[i] = this.parseField();\n        }\n        return message;\n    }\n    parseField() {\n        const name = this.reader.cstring();\n        const tableID = this.reader.int32();\n        const columnID = this.reader.int16();\n        const dataTypeID = this.reader.int32();\n        const dataTypeSize = this.reader.int16();\n        const dataTypeModifier = this.reader.int32();\n        const mode = this.reader.int16() === 0 ? 'text' : 'binary';\n        return new messages_1.Field(name, tableID, columnID, dataTypeID, dataTypeSize, dataTypeModifier, mode);\n    }\n    parseDataRowMessage(offset, length, bytes) {\n        this.reader.setBuffer(offset, bytes);\n        const fieldCount = this.reader.int16();\n        const fields = new Array(fieldCount);\n        for (let i = 0; i < fieldCount; i++) {\n            const len = this.reader.int32();\n            // a -1 for length means the value of the field is null\n            fields[i] = len === -1 ? null : this.reader.string(len);\n        }\n        return new messages_1.DataRowMessage(length, fields);\n    }\n    parseParameterStatusMessage(offset, length, bytes) {\n        this.reader.setBuffer(offset, bytes);\n        const name = this.reader.cstring();\n        const value = this.reader.cstring();\n        return new messages_1.ParameterStatusMessage(length, name, value);\n    }\n    parseBackendKeyData(offset, length, bytes) {\n        this.reader.setBuffer(offset, bytes);\n        const processID = this.reader.int32();\n        const secretKey = this.reader.int32();\n        return new messages_1.BackendKeyDataMessage(length, processID, secretKey);\n    }\n    parseAuthenticationResponse(offset, length, bytes) {\n        this.reader.setBuffer(offset, bytes);\n        const code = this.reader.int32();\n        // TODO(bmc): maybe better types here\n        const message = {\n            name: \"authenticationOk\" /* authenticationOk */,\n            length,\n        };\n        switch (code) {\n            case 0: // AuthenticationOk\n                break;\n            case 3: // AuthenticationCleartextPassword\n                if (message.length === 8) {\n                    message.name = \"authenticationCleartextPassword\" /* authenticationCleartextPassword */;\n                }\n                break;\n            case 5: // AuthenticationMD5Password\n                if (message.length === 12) {\n                    message.name = \"authenticationMD5Password\" /* authenticationMD5Password */;\n                    const salt = this.reader.bytes(4);\n                    return new messages_1.AuthenticationMD5Password(length, salt);\n                }\n                break;\n            case 10: // AuthenticationSASL\n                message.name = \"authenticationSASL\" /* authenticationSASL */;\n                message.mechanisms = [];\n                let mechanism;\n                do {\n                    mechanism = this.reader.cstring();\n                    if (mechanism) {\n                        message.mechanisms.push(mechanism);\n                    }\n                } while (mechanism);\n                break;\n            case 11: // AuthenticationSASLContinue\n                message.name = \"authenticationSASLContinue\" /* authenticationSASLContinue */;\n                message.data = this.reader.string(length - 8);\n                break;\n            case 12: // AuthenticationSASLFinal\n                message.name = \"authenticationSASLFinal\" /* authenticationSASLFinal */;\n                message.data = this.reader.string(length - 8);\n                break;\n            default:\n                throw new Error('Unknown authenticationOk message type ' + code);\n        }\n        return message;\n    }\n    parseErrorMessage(offset, length, bytes, name) {\n        this.reader.setBuffer(offset, bytes);\n        const fields = {};\n        let fieldType = this.reader.string(1);\n        while (fieldType !== '\\0') {\n            fields[fieldType] = this.reader.cstring();\n            fieldType = this.reader.string(1);\n        }\n        const messageValue = fields.M;\n        const message = name === \"notice\" /* notice */\n            ? new messages_1.NoticeMessage(length, messageValue)\n            : new messages_1.DatabaseError(messageValue, length, name);\n        message.severity = fields.S;\n        message.code = fields.C;\n        message.detail = fields.D;\n        message.hint = fields.H;\n        message.position = fields.P;\n        message.internalPosition = fields.p;\n        message.internalQuery = fields.q;\n        message.where = fields.W;\n        message.schema = fields.s;\n        message.table = fields.t;\n        message.column = fields.c;\n        message.dataType = fields.d;\n        message.constraint = fields.n;\n        message.file = fields.F;\n        message.line = fields.L;\n        message.routine = fields.R;\n        return message;\n    }\n}\nexports.Parser = Parser;\n//# sourceMappingURL=parser.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst buffer_writer_1 = require(\"./buffer-writer\");\nconst writer = new buffer_writer_1.Writer();\nconst startup = (opts) => {\n    // protocol version\n    writer.addInt16(3).addInt16(0);\n    for (const key of Object.keys(opts)) {\n        writer.addCString(key).addCString(opts[key]);\n    }\n    writer.addCString('client_encoding').addCString('UTF8');\n    var bodyBuffer = writer.addCString('').flush();\n    // this message is sent without a code\n    var length = bodyBuffer.length + 4;\n    return new buffer_writer_1.Writer().addInt32(length).add(bodyBuffer).flush();\n};\nconst requestSsl = () => {\n    const response = Buffer.allocUnsafe(8);\n    response.writeInt32BE(8, 0);\n    response.writeInt32BE(80877103, 4);\n    return response;\n};\nconst password = (password) => {\n    return writer.addCString(password).flush(112 /* startup */);\n};\nconst sendSASLInitialResponseMessage = function (mechanism, initialResponse) {\n    // 0x70 = 'p'\n    writer.addCString(mechanism).addInt32(Buffer.byteLength(initialResponse)).addString(initialResponse);\n    return writer.flush(112 /* startup */);\n};\nconst sendSCRAMClientFinalMessage = function (additionalData) {\n    return writer.addString(additionalData).flush(112 /* startup */);\n};\nconst query = (text) => {\n    return writer.addCString(text).flush(81 /* query */);\n};\nconst emptyArray = [];\nconst parse = (query) => {\n    // expect something like this:\n    // { name: 'queryName',\n    //   text: 'select * from blah',\n    //   types: ['int8', 'bool'] }\n    // normalize missing query names to allow for null\n    const name = query.name || '';\n    if (name.length > 63) {\n        /* eslint-disable no-console */\n        console.error('Warning! Postgres only supports 63 characters for query names.');\n        console.error('You supplied %s (%s)', name, name.length);\n        console.error('This can cause conflicts and silent errors executing queries');\n        /* eslint-enable no-console */\n    }\n    const types = query.types || emptyArray;\n    var len = types.length;\n    var buffer = writer\n        .addCString(name) // name of query\n        .addCString(query.text) // actual query text\n        .addInt16(len);\n    for (var i = 0; i < len; i++) {\n        buffer.addInt32(types[i]);\n    }\n    return writer.flush(80 /* parse */);\n};\nconst paramWriter = new buffer_writer_1.Writer();\nconst writeValues = function (values, valueMapper) {\n    for (let i = 0; i < values.length; i++) {\n        const mappedVal = valueMapper ? valueMapper(values[i], i) : values[i];\n        if (mappedVal == null) {\n            // add the param type (string) to the writer\n            writer.addInt16(0 /* STRING */);\n            // write -1 to the param writer to indicate null\n            paramWriter.addInt32(-1);\n        }\n        else if (mappedVal instanceof Buffer) {\n            // add the param type (binary) to the writer\n            writer.addInt16(1 /* BINARY */);\n            // add the buffer to the param writer\n            paramWriter.addInt32(mappedVal.length);\n            paramWriter.add(mappedVal);\n        }\n        else {\n            // add the param type (string) to the writer\n            writer.addInt16(0 /* STRING */);\n            paramWriter.addInt32(Buffer.byteLength(mappedVal));\n            paramWriter.addString(mappedVal);\n        }\n    }\n};\nconst bind = (config = {}) => {\n    // normalize config\n    const portal = config.portal || '';\n    const statement = config.statement || '';\n    const binary = config.binary || false;\n    const values = config.values || emptyArray;\n    const len = values.length;\n    writer.addCString(portal).addCString(statement);\n    writer.addInt16(len);\n    writeValues(values, config.valueMapper);\n    writer.addInt16(len);\n    writer.add(paramWriter.flush());\n    // format code\n    writer.addInt16(binary ? 1 /* BINARY */ : 0 /* STRING */);\n    return writer.flush(66 /* bind */);\n};\nconst emptyExecute = Buffer.from([69 /* execute */, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00]);\nconst execute = (config) => {\n    // this is the happy path for most queries\n    if (!config || (!config.portal && !config.rows)) {\n        return emptyExecute;\n    }\n    const portal = config.portal || '';\n    const rows = config.rows || 0;\n    const portalLength = Buffer.byteLength(portal);\n    const len = 4 + portalLength + 1 + 4;\n    // one extra bit for code\n    const buff = Buffer.allocUnsafe(1 + len);\n    buff[0] = 69 /* execute */;\n    buff.writeInt32BE(len, 1);\n    buff.write(portal, 5, 'utf-8');\n    buff[portalLength + 5] = 0; // null terminate portal cString\n    buff.writeUInt32BE(rows, buff.length - 4);\n    return buff;\n};\nconst cancel = (processID, secretKey) => {\n    const buffer = Buffer.allocUnsafe(16);\n    buffer.writeInt32BE(16, 0);\n    buffer.writeInt16BE(1234, 4);\n    buffer.writeInt16BE(5678, 6);\n    buffer.writeInt32BE(processID, 8);\n    buffer.writeInt32BE(secretKey, 12);\n    return buffer;\n};\nconst cstringMessage = (code, string) => {\n    const stringLen = Buffer.byteLength(string);\n    const len = 4 + stringLen + 1;\n    // one extra bit for code\n    const buffer = Buffer.allocUnsafe(1 + len);\n    buffer[0] = code;\n    buffer.writeInt32BE(len, 1);\n    buffer.write(string, 5, 'utf-8');\n    buffer[len] = 0; // null terminate cString\n    return buffer;\n};\nconst emptyDescribePortal = writer.addCString('P').flush(68 /* describe */);\nconst emptyDescribeStatement = writer.addCString('S').flush(68 /* describe */);\nconst describe = (msg) => {\n    return msg.name\n        ? cstringMessage(68 /* describe */, `${msg.type}${msg.name || ''}`)\n        : msg.type === 'P'\n            ? emptyDescribePortal\n            : emptyDescribeStatement;\n};\nconst close = (msg) => {\n    const text = `${msg.type}${msg.name || ''}`;\n    return cstringMessage(67 /* close */, text);\n};\nconst copyData = (chunk) => {\n    return writer.add(chunk).flush(100 /* copyFromChunk */);\n};\nconst copyFail = (message) => {\n    return cstringMessage(102 /* copyFail */, message);\n};\nconst codeOnlyBuffer = (code) => Buffer.from([code, 0x00, 0x00, 0x00, 0x04]);\nconst flushBuffer = codeOnlyBuffer(72 /* flush */);\nconst syncBuffer = codeOnlyBuffer(83 /* sync */);\nconst endBuffer = codeOnlyBuffer(88 /* end */);\nconst copyDoneBuffer = codeOnlyBuffer(99 /* copyDone */);\nconst serialize = {\n    startup,\n    password,\n    requestSsl,\n    sendSASLInitialResponseMessage,\n    sendSCRAMClientFinalMessage,\n    query,\n    parse,\n    bind,\n    execute,\n    describe,\n    close,\n    flush: () => flushBuffer,\n    sync: () => syncBuffer,\n    end: () => endBuffer,\n    copyData,\n    copyDone: () => copyDoneBuffer,\n    copyFail,\n    cancel,\n};\nexports.serialize = serialize;\n//# sourceMappingURL=serializer.js.map","var textParsers = require('./lib/textParsers');\nvar binaryParsers = require('./lib/binaryParsers');\nvar arrayParser = require('./lib/arrayParser');\nvar builtinTypes = require('./lib/builtins');\n\nexports.getTypeParser = getTypeParser;\nexports.setTypeParser = setTypeParser;\nexports.arrayParser = arrayParser;\nexports.builtins = builtinTypes;\n\nvar typeParsers = {\n  text: {},\n  binary: {}\n};\n\n//the empty parse function\nfunction noParse (val) {\n  return String(val);\n};\n\n//returns a function used to convert a specific type (specified by\n//oid) into a result javascript type\n//note: the oid can be obtained via the following sql query:\n//SELECT oid FROM pg_type WHERE typname = 'TYPE_NAME_HERE';\nfunction getTypeParser (oid, format) {\n  format = format || 'text';\n  if (!typeParsers[format]) {\n    return noParse;\n  }\n  return typeParsers[format][oid] || noParse;\n};\n\nfunction setTypeParser (oid, format, parseFn) {\n  if(typeof format == 'function') {\n    parseFn = format;\n    format = 'text';\n  }\n  typeParsers[format][oid] = parseFn;\n};\n\ntextParsers.init(function(oid, converter) {\n  typeParsers.text[oid] = converter;\n});\n\nbinaryParsers.init(function(oid, converter) {\n  typeParsers.binary[oid] = converter;\n});\n","var array = require('postgres-array');\n\nmodule.exports = {\n  create: function (source, transform) {\n    return {\n      parse: function() {\n        return array.parse(source, transform);\n      }\n    };\n  }\n};\n","var parseInt64 = require('pg-int8');\n\nvar parseBits = function(data, bits, offset, invert, callback) {\n  offset = offset || 0;\n  invert = invert || false;\n  callback = callback || function(lastValue, newValue, bits) { return (lastValue * Math.pow(2, bits)) + newValue; };\n  var offsetBytes = offset >> 3;\n\n  var inv = function(value) {\n    if (invert) {\n      return ~value & 0xff;\n    }\n\n    return value;\n  };\n\n  // read first (maybe partial) byte\n  var mask = 0xff;\n  var firstBits = 8 - (offset % 8);\n  if (bits < firstBits) {\n    mask = (0xff << (8 - bits)) & 0xff;\n    firstBits = bits;\n  }\n\n  if (offset) {\n    mask = mask >> (offset % 8);\n  }\n\n  var result = 0;\n  if ((offset % 8) + bits >= 8) {\n    result = callback(0, inv(data[offsetBytes]) & mask, firstBits);\n  }\n\n  // read bytes\n  var bytes = (bits + offset) >> 3;\n  for (var i = offsetBytes + 1; i < bytes; i++) {\n    result = callback(result, inv(data[i]), 8);\n  }\n\n  // bits to read, that are not a complete byte\n  var lastBits = (bits + offset) % 8;\n  if (lastBits > 0) {\n    result = callback(result, inv(data[bytes]) >> (8 - lastBits), lastBits);\n  }\n\n  return result;\n};\n\nvar parseFloatFromBits = function(data, precisionBits, exponentBits) {\n  var bias = Math.pow(2, exponentBits - 1) - 1;\n  var sign = parseBits(data, 1);\n  var exponent = parseBits(data, exponentBits, 1);\n\n  if (exponent === 0) {\n    return 0;\n  }\n\n  // parse mantissa\n  var precisionBitsCounter = 1;\n  var parsePrecisionBits = function(lastValue, newValue, bits) {\n    if (lastValue === 0) {\n      lastValue = 1;\n    }\n\n    for (var i = 1; i <= bits; i++) {\n      precisionBitsCounter /= 2;\n      if ((newValue & (0x1 << (bits - i))) > 0) {\n        lastValue += precisionBitsCounter;\n      }\n    }\n\n    return lastValue;\n  };\n\n  var mantissa = parseBits(data, precisionBits, exponentBits + 1, false, parsePrecisionBits);\n\n  // special cases\n  if (exponent == (Math.pow(2, exponentBits + 1) - 1)) {\n    if (mantissa === 0) {\n      return (sign === 0) ? Infinity : -Infinity;\n    }\n\n    return NaN;\n  }\n\n  // normale number\n  return ((sign === 0) ? 1 : -1) * Math.pow(2, exponent - bias) * mantissa;\n};\n\nvar parseInt16 = function(value) {\n  if (parseBits(value, 1) == 1) {\n    return -1 * (parseBits(value, 15, 1, true) + 1);\n  }\n\n  return parseBits(value, 15, 1);\n};\n\nvar parseInt32 = function(value) {\n  if (parseBits(value, 1) == 1) {\n    return -1 * (parseBits(value, 31, 1, true) + 1);\n  }\n\n  return parseBits(value, 31, 1);\n};\n\nvar parseFloat32 = function(value) {\n  return parseFloatFromBits(value, 23, 8);\n};\n\nvar parseFloat64 = function(value) {\n  return parseFloatFromBits(value, 52, 11);\n};\n\nvar parseNumeric = function(value) {\n  var sign = parseBits(value, 16, 32);\n  if (sign == 0xc000) {\n    return NaN;\n  }\n\n  var weight = Math.pow(10000, parseBits(value, 16, 16));\n  var result = 0;\n\n  var digits = [];\n  var ndigits = parseBits(value, 16);\n  for (var i = 0; i < ndigits; i++) {\n    result += parseBits(value, 16, 64 + (16 * i)) * weight;\n    weight /= 10000;\n  }\n\n  var scale = Math.pow(10, parseBits(value, 16, 48));\n  return ((sign === 0) ? 1 : -1) * Math.round(result * scale) / scale;\n};\n\nvar parseDate = function(isUTC, value) {\n  var sign = parseBits(value, 1);\n  var rawValue = parseBits(value, 63, 1);\n\n  // discard usecs and shift from 2000 to 1970\n  var result = new Date((((sign === 0) ? 1 : -1) * rawValue / 1000) + 946684800000);\n\n  if (!isUTC) {\n    result.setTime(result.getTime() + result.getTimezoneOffset() * 60000);\n  }\n\n  // add microseconds to the date\n  result.usec = rawValue % 1000;\n  result.getMicroSeconds = function() {\n    return this.usec;\n  };\n  result.setMicroSeconds = function(value) {\n    this.usec = value;\n  };\n  result.getUTCMicroSeconds = function() {\n    return this.usec;\n  };\n\n  return result;\n};\n\nvar parseArray = function(value) {\n  var dim = parseBits(value, 32);\n\n  var flags = parseBits(value, 32, 32);\n  var elementType = parseBits(value, 32, 64);\n\n  var offset = 96;\n  var dims = [];\n  for (var i = 0; i < dim; i++) {\n    // parse dimension\n    dims[i] = parseBits(value, 32, offset);\n    offset += 32;\n\n    // ignore lower bounds\n    offset += 32;\n  }\n\n  var parseElement = function(elementType) {\n    // parse content length\n    var length = parseBits(value, 32, offset);\n    offset += 32;\n\n    // parse null values\n    if (length == 0xffffffff) {\n      return null;\n    }\n\n    var result;\n    if ((elementType == 0x17) || (elementType == 0x14)) {\n      // int/bigint\n      result = parseBits(value, length * 8, offset);\n      offset += length * 8;\n      return result;\n    }\n    else if (elementType == 0x19) {\n      // string\n      result = value.toString(this.encoding, offset >> 3, (offset += (length << 3)) >> 3);\n      return result;\n    }\n    else {\n      console.log(\"ERROR: ElementType not implemented: \" + elementType);\n    }\n  };\n\n  var parse = function(dimension, elementType) {\n    var array = [];\n    var i;\n\n    if (dimension.length > 1) {\n      var count = dimension.shift();\n      for (i = 0; i < count; i++) {\n        array[i] = parse(dimension, elementType);\n      }\n      dimension.unshift(count);\n    }\n    else {\n      for (i = 0; i < dimension[0]; i++) {\n        array[i] = parseElement(elementType);\n      }\n    }\n\n    return array;\n  };\n\n  return parse(dims, elementType);\n};\n\nvar parseText = function(value) {\n  return value.toString('utf8');\n};\n\nvar parseBool = function(value) {\n  if(value === null) return null;\n  return (parseBits(value, 8) > 0);\n};\n\nvar init = function(register) {\n  register(20, parseInt64);\n  register(21, parseInt16);\n  register(23, parseInt32);\n  register(26, parseInt32);\n  register(1700, parseNumeric);\n  register(700, parseFloat32);\n  register(701, parseFloat64);\n  register(16, parseBool);\n  register(1114, parseDate.bind(null, false));\n  register(1184, parseDate.bind(null, true));\n  register(1000, parseArray);\n  register(1007, parseArray);\n  register(1016, parseArray);\n  register(1008, parseArray);\n  register(1009, parseArray);\n  register(25, parseText);\n};\n\nmodule.exports = {\n  init: init\n};\n","/**\n * Following query was used to generate this file:\n\n SELECT json_object_agg(UPPER(PT.typname), PT.oid::int4 ORDER BY pt.oid)\n FROM pg_type PT\n WHERE typnamespace = (SELECT pgn.oid FROM pg_namespace pgn WHERE nspname = 'pg_catalog') -- Take only builting Postgres types with stable OID (extension types are not guaranted to be stable)\n AND typtype = 'b' -- Only basic types\n AND typelem = 0 -- Ignore aliases\n AND typisdefined -- Ignore undefined types\n */\n\nmodule.exports = {\n    BOOL: 16,\n    BYTEA: 17,\n    CHAR: 18,\n    INT8: 20,\n    INT2: 21,\n    INT4: 23,\n    REGPROC: 24,\n    TEXT: 25,\n    OID: 26,\n    TID: 27,\n    XID: 28,\n    CID: 29,\n    JSON: 114,\n    XML: 142,\n    PG_NODE_TREE: 194,\n    SMGR: 210,\n    PATH: 602,\n    POLYGON: 604,\n    CIDR: 650,\n    FLOAT4: 700,\n    FLOAT8: 701,\n    ABSTIME: 702,\n    RELTIME: 703,\n    TINTERVAL: 704,\n    CIRCLE: 718,\n    MACADDR8: 774,\n    MONEY: 790,\n    MACADDR: 829,\n    INET: 869,\n    ACLITEM: 1033,\n    BPCHAR: 1042,\n    VARCHAR: 1043,\n    DATE: 1082,\n    TIME: 1083,\n    TIMESTAMP: 1114,\n    TIMESTAMPTZ: 1184,\n    INTERVAL: 1186,\n    TIMETZ: 1266,\n    BIT: 1560,\n    VARBIT: 1562,\n    NUMERIC: 1700,\n    REFCURSOR: 1790,\n    REGPROCEDURE: 2202,\n    REGOPER: 2203,\n    REGOPERATOR: 2204,\n    REGCLASS: 2205,\n    REGTYPE: 2206,\n    UUID: 2950,\n    TXID_SNAPSHOT: 2970,\n    PG_LSN: 3220,\n    PG_NDISTINCT: 3361,\n    PG_DEPENDENCIES: 3402,\n    TSVECTOR: 3614,\n    TSQUERY: 3615,\n    GTSVECTOR: 3642,\n    REGCONFIG: 3734,\n    REGDICTIONARY: 3769,\n    JSONB: 3802,\n    REGNAMESPACE: 4089,\n    REGROLE: 4096\n};\n","var array = require('postgres-array')\nvar arrayParser = require('./arrayParser');\nvar parseDate = require('postgres-date');\nvar parseInterval = require('postgres-interval');\nvar parseByteA = require('postgres-bytea');\n\nfunction allowNull (fn) {\n  return function nullAllowed (value) {\n    if (value === null) return value\n    return fn(value)\n  }\n}\n\nfunction parseBool (value) {\n  if (value === null) return value\n  return value === 'TRUE' ||\n    value === 't' ||\n    value === 'true' ||\n    value === 'y' ||\n    value === 'yes' ||\n    value === 'on' ||\n    value === '1';\n}\n\nfunction parseBoolArray (value) {\n  if (!value) return null\n  return array.parse(value, parseBool)\n}\n\nfunction parseBaseTenInt (string) {\n  return parseInt(string, 10)\n}\n\nfunction parseIntegerArray (value) {\n  if (!value) return null\n  return array.parse(value, allowNull(parseBaseTenInt))\n}\n\nfunction parseBigIntegerArray (value) {\n  if (!value) return null\n  return array.parse(value, allowNull(function (entry) {\n    return parseBigInteger(entry).trim()\n  }))\n}\n\nvar parsePointArray = function(value) {\n  if(!value) { return null; }\n  var p = arrayParser.create(value, function(entry) {\n    if(entry !== null) {\n      entry = parsePoint(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseFloatArray = function(value) {\n  if(!value) { return null; }\n  var p = arrayParser.create(value, function(entry) {\n    if(entry !== null) {\n      entry = parseFloat(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseStringArray = function(value) {\n  if(!value) { return null; }\n\n  var p = arrayParser.create(value);\n  return p.parse();\n};\n\nvar parseDateArray = function(value) {\n  if (!value) { return null; }\n\n  var p = arrayParser.create(value, function(entry) {\n    if (entry !== null) {\n      entry = parseDate(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseIntervalArray = function(value) {\n  if (!value) { return null; }\n\n  var p = arrayParser.create(value, function(entry) {\n    if (entry !== null) {\n      entry = parseInterval(entry);\n    }\n    return entry;\n  });\n\n  return p.parse();\n};\n\nvar parseByteAArray = function(value) {\n  if (!value) { return null; }\n\n  return array.parse(value, allowNull(parseByteA));\n};\n\nvar parseInteger = function(value) {\n  return parseInt(value, 10);\n};\n\nvar parseBigInteger = function(value) {\n  var valStr = String(value);\n  if (/^\\d+$/.test(valStr)) { return valStr; }\n  return value;\n};\n\nvar parseJsonArray = function(value) {\n  if (!value) { return null; }\n\n  return array.parse(value, allowNull(JSON.parse));\n};\n\nvar parsePoint = function(value) {\n  if (value[0] !== '(') { return null; }\n\n  value = value.substring( 1, value.length - 1 ).split(',');\n\n  return {\n    x: parseFloat(value[0])\n  , y: parseFloat(value[1])\n  };\n};\n\nvar parseCircle = function(value) {\n  if (value[0] !== '<' && value[1] !== '(') { return null; }\n\n  var point = '(';\n  var radius = '';\n  var pointParsed = false;\n  for (var i = 2; i < value.length - 1; i++){\n    if (!pointParsed) {\n      point += value[i];\n    }\n\n    if (value[i] === ')') {\n      pointParsed = true;\n      continue;\n    } else if (!pointParsed) {\n      continue;\n    }\n\n    if (value[i] === ','){\n      continue;\n    }\n\n    radius += value[i];\n  }\n  var result = parsePoint(point);\n  result.radius = parseFloat(radius);\n\n  return result;\n};\n\nvar init = function(register) {\n  register(20, parseBigInteger); // int8\n  register(21, parseInteger); // int2\n  register(23, parseInteger); // int4\n  register(26, parseInteger); // oid\n  register(700, parseFloat); // float4/real\n  register(701, parseFloat); // float8/double\n  register(16, parseBool);\n  register(1082, parseDate); // date\n  register(1114, parseDate); // timestamp without timezone\n  register(1184, parseDate); // timestamp\n  register(600, parsePoint); // point\n  register(651, parseStringArray); // cidr[]\n  register(718, parseCircle); // circle\n  register(1000, parseBoolArray);\n  register(1001, parseByteAArray);\n  register(1005, parseIntegerArray); // _int2\n  register(1007, parseIntegerArray); // _int4\n  register(1028, parseIntegerArray); // oid[]\n  register(1016, parseBigIntegerArray); // _int8\n  register(1017, parsePointArray); // point[]\n  register(1021, parseFloatArray); // _float4\n  register(1022, parseFloatArray); // _float8\n  register(1231, parseFloatArray); // _numeric\n  register(1014, parseStringArray); //char\n  register(1015, parseStringArray); //varchar\n  register(1008, parseStringArray);\n  register(1009, parseStringArray);\n  register(1040, parseStringArray); // macaddr[]\n  register(1041, parseStringArray); // inet[]\n  register(1115, parseDateArray); // timestamp without time zone[]\n  register(1182, parseDateArray); // _date\n  register(1185, parseDateArray); // timestamp with time zone[]\n  register(1186, parseInterval);\n  register(1187, parseIntervalArray);\n  register(17, parseByteA);\n  register(114, JSON.parse.bind(JSON)); // json\n  register(3802, JSON.parse.bind(JSON)); // jsonb\n  register(199, parseJsonArray); // json[]\n  register(3807, parseJsonArray); // jsonb[]\n  register(3907, parseStringArray); // numrange[]\n  register(2951, parseStringArray); // uuid[]\n  register(791, parseStringArray); // money[]\n  register(1183, parseStringArray); // time[]\n  register(1270, parseStringArray); // timetz[]\n};\n\nmodule.exports = {\n  init: init\n};\n","'use strict'\n\nvar EventEmitter = require('events').EventEmitter\nvar util = require('util')\nvar utils = require('./utils')\nvar sasl = require('./sasl')\nvar pgPass = require('pgpass')\nvar TypeOverrides = require('./type-overrides')\n\nvar ConnectionParameters = require('./connection-parameters')\nvar Query = require('./query')\nvar defaults = require('./defaults')\nvar Connection = require('./connection')\n\nclass Client extends EventEmitter {\n  constructor(config) {\n    super()\n\n    this.connectionParameters = new ConnectionParameters(config)\n    this.user = this.connectionParameters.user\n    this.database = this.connectionParameters.database\n    this.port = this.connectionParameters.port\n    this.host = this.connectionParameters.host\n\n    // \"hiding\" the password so it doesn't show up in stack traces\n    // or if the client is console.logged\n    Object.defineProperty(this, 'password', {\n      configurable: true,\n      enumerable: false,\n      writable: true,\n      value: this.connectionParameters.password,\n    })\n\n    this.replication = this.connectionParameters.replication\n\n    var c = config || {}\n\n    this._Promise = c.Promise || global.Promise\n    this._types = new TypeOverrides(c.types)\n    this._ending = false\n    this._connecting = false\n    this._connected = false\n    this._connectionError = false\n    this._queryable = true\n\n    this.connection =\n      c.connection ||\n      new Connection({\n        stream: c.stream,\n        ssl: this.connectionParameters.ssl,\n        keepAlive: c.keepAlive || false,\n        keepAliveInitialDelayMillis: c.keepAliveInitialDelayMillis || 0,\n        encoding: this.connectionParameters.client_encoding || 'utf8',\n      })\n    this.queryQueue = []\n    this.binary = c.binary || defaults.binary\n    this.processID = null\n    this.secretKey = null\n    this.ssl = this.connectionParameters.ssl || false\n    // As with Password, make SSL->Key (the private key) non-enumerable.\n    // It won't show up in stack traces\n    // or if the client is console.logged\n    if (this.ssl && this.ssl.key) {\n      Object.defineProperty(this.ssl, 'key', {\n        enumerable: false,\n      })\n    }\n\n    this._connectionTimeoutMillis = c.connectionTimeoutMillis || 0\n  }\n\n  _errorAllQueries(err) {\n    const enqueueError = (query) => {\n      process.nextTick(() => {\n        query.handleError(err, this.connection)\n      })\n    }\n\n    if (this.activeQuery) {\n      enqueueError(this.activeQuery)\n      this.activeQuery = null\n    }\n\n    this.queryQueue.forEach(enqueueError)\n    this.queryQueue.length = 0\n  }\n\n  _connect(callback) {\n    var self = this\n    var con = this.connection\n    this._connectionCallback = callback\n\n    if (this._connecting || this._connected) {\n      const err = new Error('Client has already been connected. You cannot reuse a client.')\n      process.nextTick(() => {\n        callback(err)\n      })\n      return\n    }\n    this._connecting = true\n\n    this.connectionTimeoutHandle\n    if (this._connectionTimeoutMillis > 0) {\n      this.connectionTimeoutHandle = setTimeout(() => {\n        con._ending = true\n        con.stream.destroy(new Error('timeout expired'))\n      }, this._connectionTimeoutMillis)\n    }\n\n    if (this.host && this.host.indexOf('/') === 0) {\n      con.connect(this.host + '/.s.PGSQL.' + this.port)\n    } else {\n      con.connect(this.port, this.host)\n    }\n\n    // once connection is established send startup message\n    con.on('connect', function () {\n      if (self.ssl) {\n        con.requestSsl()\n      } else {\n        con.startup(self.getStartupConf())\n      }\n    })\n\n    con.on('sslconnect', function () {\n      con.startup(self.getStartupConf())\n    })\n\n    this._attachListeners(con)\n\n    con.once('end', () => {\n      const error = this._ending ? new Error('Connection terminated') : new Error('Connection terminated unexpectedly')\n\n      clearTimeout(this.connectionTimeoutHandle)\n      this._errorAllQueries(error)\n\n      if (!this._ending) {\n        // if the connection is ended without us calling .end()\n        // on this client then we have an unexpected disconnection\n        // treat this as an error unless we've already emitted an error\n        // during connection.\n        if (this._connecting && !this._connectionError) {\n          if (this._connectionCallback) {\n            this._connectionCallback(error)\n          } else {\n            this._handleErrorEvent(error)\n          }\n        } else if (!this._connectionError) {\n          this._handleErrorEvent(error)\n        }\n      }\n\n      process.nextTick(() => {\n        this.emit('end')\n      })\n    })\n  }\n\n  connect(callback) {\n    if (callback) {\n      this._connect(callback)\n      return\n    }\n\n    return new this._Promise((resolve, reject) => {\n      this._connect((error) => {\n        if (error) {\n          reject(error)\n        } else {\n          resolve()\n        }\n      })\n    })\n  }\n\n  _attachListeners(con) {\n    // password request handling\n    con.on('authenticationCleartextPassword', this._handleAuthCleartextPassword.bind(this))\n    // password request handling\n    con.on('authenticationMD5Password', this._handleAuthMD5Password.bind(this))\n    // password request handling (SASL)\n    con.on('authenticationSASL', this._handleAuthSASL.bind(this))\n    con.on('authenticationSASLContinue', this._handleAuthSASLContinue.bind(this))\n    con.on('authenticationSASLFinal', this._handleAuthSASLFinal.bind(this))\n    con.on('backendKeyData', this._handleBackendKeyData.bind(this))\n    con.on('error', this._handleErrorEvent.bind(this))\n    con.on('errorMessage', this._handleErrorMessage.bind(this))\n    con.on('readyForQuery', this._handleReadyForQuery.bind(this))\n    con.on('notice', this._handleNotice.bind(this))\n    con.on('rowDescription', this._handleRowDescription.bind(this))\n    con.on('dataRow', this._handleDataRow.bind(this))\n    con.on('portalSuspended', this._handlePortalSuspended.bind(this))\n    con.on('emptyQuery', this._handleEmptyQuery.bind(this))\n    con.on('commandComplete', this._handleCommandComplete.bind(this))\n    con.on('parseComplete', this._handleParseComplete.bind(this))\n    con.on('copyInResponse', this._handleCopyInResponse.bind(this))\n    con.on('copyData', this._handleCopyData.bind(this))\n    con.on('notification', this._handleNotification.bind(this))\n  }\n\n  // TODO(bmc): deprecate pgpass \"built in\" integration since this.password can be a function\n  // it can be supplied by the user if required - this is a breaking change!\n  _checkPgPass(cb) {\n    const con = this.connection\n    if (typeof this.password === 'function') {\n      this._Promise\n        .resolve()\n        .then(() => this.password())\n        .then((pass) => {\n          if (pass !== undefined) {\n            if (typeof pass !== 'string') {\n              con.emit('error', new TypeError('Password must be a string'))\n              return\n            }\n            this.connectionParameters.password = this.password = pass\n          } else {\n            this.connectionParameters.password = this.password = null\n          }\n          cb()\n        })\n        .catch((err) => {\n          con.emit('error', err)\n        })\n    } else if (this.password !== null) {\n      cb()\n    } else {\n      pgPass(this.connectionParameters, (pass) => {\n        if (undefined !== pass) {\n          this.connectionParameters.password = this.password = pass\n        }\n        cb()\n      })\n    }\n  }\n\n  _handleAuthCleartextPassword(msg) {\n    this._checkPgPass(() => {\n      this.connection.password(this.password)\n    })\n  }\n\n  _handleAuthMD5Password(msg) {\n    this._checkPgPass(() => {\n      const hashedPassword = utils.postgresMd5PasswordHash(this.user, this.password, msg.salt)\n      this.connection.password(hashedPassword)\n    })\n  }\n\n  _handleAuthSASL(msg) {\n    this._checkPgPass(() => {\n      this.saslSession = sasl.startSession(msg.mechanisms)\n      this.connection.sendSASLInitialResponseMessage(this.saslSession.mechanism, this.saslSession.response)\n    })\n  }\n\n  _handleAuthSASLContinue(msg) {\n    sasl.continueSession(this.saslSession, this.password, msg.data)\n    this.connection.sendSCRAMClientFinalMessage(this.saslSession.response)\n  }\n\n  _handleAuthSASLFinal(msg) {\n    sasl.finalizeSession(this.saslSession, msg.data)\n    this.saslSession = null\n  }\n\n  _handleBackendKeyData(msg) {\n    this.processID = msg.processID\n    this.secretKey = msg.secretKey\n  }\n\n  _handleReadyForQuery(msg) {\n    if (this._connecting) {\n      this._connecting = false\n      this._connected = true\n      clearTimeout(this.connectionTimeoutHandle)\n\n      // process possible callback argument to Client#connect\n      if (this._connectionCallback) {\n        this._connectionCallback(null, this)\n        // remove callback for proper error handling\n        // after the connect event\n        this._connectionCallback = null\n      }\n      this.emit('connect')\n    }\n    const { activeQuery } = this\n    this.activeQuery = null\n    this.readyForQuery = true\n    if (activeQuery) {\n      activeQuery.handleReadyForQuery(this.connection)\n    }\n    this._pulseQueryQueue()\n  }\n\n  // if we receieve an error event or error message\n  // during the connection process we handle it here\n  _handleErrorWhileConnecting(err) {\n    if (this._connectionError) {\n      // TODO(bmc): this is swallowing errors - we shouldn't do this\n      return\n    }\n    this._connectionError = true\n    clearTimeout(this.connectionTimeoutHandle)\n    if (this._connectionCallback) {\n      return this._connectionCallback(err)\n    }\n    this.emit('error', err)\n  }\n\n  // if we're connected and we receive an error event from the connection\n  // this means the socket is dead - do a hard abort of all queries and emit\n  // the socket error on the client as well\n  _handleErrorEvent(err) {\n    if (this._connecting) {\n      return this._handleErrorWhileConnecting(err)\n    }\n    this._queryable = false\n    this._errorAllQueries(err)\n    this.emit('error', err)\n  }\n\n  // handle error messages from the postgres backend\n  _handleErrorMessage(msg) {\n    if (this._connecting) {\n      return this._handleErrorWhileConnecting(msg)\n    }\n    const activeQuery = this.activeQuery\n\n    if (!activeQuery) {\n      this._handleErrorEvent(msg)\n      return\n    }\n\n    this.activeQuery = null\n    activeQuery.handleError(msg, this.connection)\n  }\n\n  _handleRowDescription(msg) {\n    // delegate rowDescription to active query\n    this.activeQuery.handleRowDescription(msg)\n  }\n\n  _handleDataRow(msg) {\n    // delegate dataRow to active query\n    this.activeQuery.handleDataRow(msg)\n  }\n\n  _handlePortalSuspended(msg) {\n    // delegate portalSuspended to active query\n    this.activeQuery.handlePortalSuspended(this.connection)\n  }\n\n  _handleEmptyQuery(msg) {\n    // delegate emptyQuery to active query\n    this.activeQuery.handleEmptyQuery(this.connection)\n  }\n\n  _handleCommandComplete(msg) {\n    // delegate commandComplete to active query\n    this.activeQuery.handleCommandComplete(msg, this.connection)\n  }\n\n  _handleParseComplete(msg) {\n    // if a prepared statement has a name and properly parses\n    // we track that its already been executed so we don't parse\n    // it again on the same client\n    if (this.activeQuery.name) {\n      this.connection.parsedStatements[this.activeQuery.name] = this.activeQuery.text\n    }\n  }\n\n  _handleCopyInResponse(msg) {\n    this.activeQuery.handleCopyInResponse(this.connection)\n  }\n\n  _handleCopyData(msg) {\n    this.activeQuery.handleCopyData(msg, this.connection)\n  }\n\n  _handleNotification(msg) {\n    this.emit('notification', msg)\n  }\n\n  _handleNotice(msg) {\n    this.emit('notice', msg)\n  }\n\n  getStartupConf() {\n    var params = this.connectionParameters\n\n    var data = {\n      user: params.user,\n      database: params.database,\n    }\n\n    var appName = params.application_name || params.fallback_application_name\n    if (appName) {\n      data.application_name = appName\n    }\n    if (params.replication) {\n      data.replication = '' + params.replication\n    }\n    if (params.statement_timeout) {\n      data.statement_timeout = String(parseInt(params.statement_timeout, 10))\n    }\n    if (params.idle_in_transaction_session_timeout) {\n      data.idle_in_transaction_session_timeout = String(parseInt(params.idle_in_transaction_session_timeout, 10))\n    }\n    if (params.options) {\n      data.options = params.options\n    }\n\n    return data\n  }\n\n  cancel(client, query) {\n    if (client.activeQuery === query) {\n      var con = this.connection\n\n      if (this.host && this.host.indexOf('/') === 0) {\n        con.connect(this.host + '/.s.PGSQL.' + this.port)\n      } else {\n        con.connect(this.port, this.host)\n      }\n\n      // once connection is established send cancel message\n      con.on('connect', function () {\n        con.cancel(client.processID, client.secretKey)\n      })\n    } else if (client.queryQueue.indexOf(query) !== -1) {\n      client.queryQueue.splice(client.queryQueue.indexOf(query), 1)\n    }\n  }\n\n  setTypeParser(oid, format, parseFn) {\n    return this._types.setTypeParser(oid, format, parseFn)\n  }\n\n  getTypeParser(oid, format) {\n    return this._types.getTypeParser(oid, format)\n  }\n\n  // Ported from PostgreSQL 9.2.4 source code in src/interfaces/libpq/fe-exec.c\n  escapeIdentifier(str) {\n    return '\"' + str.replace(/\"/g, '\"\"') + '\"'\n  }\n\n  // Ported from PostgreSQL 9.2.4 source code in src/interfaces/libpq/fe-exec.c\n  escapeLiteral(str) {\n    var hasBackslash = false\n    var escaped = \"'\"\n\n    for (var i = 0; i < str.length; i++) {\n      var c = str[i]\n      if (c === \"'\") {\n        escaped += c + c\n      } else if (c === '\\\\') {\n        escaped += c + c\n        hasBackslash = true\n      } else {\n        escaped += c\n      }\n    }\n\n    escaped += \"'\"\n\n    if (hasBackslash === true) {\n      escaped = ' E' + escaped\n    }\n\n    return escaped\n  }\n\n  _pulseQueryQueue() {\n    if (this.readyForQuery === true) {\n      this.activeQuery = this.queryQueue.shift()\n      if (this.activeQuery) {\n        this.readyForQuery = false\n        this.hasExecuted = true\n\n        const queryError = this.activeQuery.submit(this.connection)\n        if (queryError) {\n          process.nextTick(() => {\n            this.activeQuery.handleError(queryError, this.connection)\n            this.readyForQuery = true\n            this._pulseQueryQueue()\n          })\n        }\n      } else if (this.hasExecuted) {\n        this.activeQuery = null\n        this.emit('drain')\n      }\n    }\n  }\n\n  query(config, values, callback) {\n    // can take in strings, config object or query object\n    var query\n    var result\n    var readTimeout\n    var readTimeoutTimer\n    var queryCallback\n\n    if (config === null || config === undefined) {\n      throw new TypeError('Client was passed a null or undefined query')\n    } else if (typeof config.submit === 'function') {\n      readTimeout = config.query_timeout || this.connectionParameters.query_timeout\n      result = query = config\n      if (typeof values === 'function') {\n        query.callback = query.callback || values\n      }\n    } else {\n      readTimeout = this.connectionParameters.query_timeout\n      query = new Query(config, values, callback)\n      if (!query.callback) {\n        result = new this._Promise((resolve, reject) => {\n          query.callback = (err, res) => (err ? reject(err) : resolve(res))\n        })\n      }\n    }\n\n    if (readTimeout) {\n      queryCallback = query.callback\n\n      readTimeoutTimer = setTimeout(() => {\n        var error = new Error('Query read timeout')\n\n        process.nextTick(() => {\n          query.handleError(error, this.connection)\n        })\n\n        queryCallback(error)\n\n        // we already returned an error,\n        // just do nothing if query completes\n        query.callback = () => {}\n\n        // Remove from queue\n        var index = this.queryQueue.indexOf(query)\n        if (index > -1) {\n          this.queryQueue.splice(index, 1)\n        }\n\n        this._pulseQueryQueue()\n      }, readTimeout)\n\n      query.callback = (err, res) => {\n        clearTimeout(readTimeoutTimer)\n        queryCallback(err, res)\n      }\n    }\n\n    if (this.binary && !query.binary) {\n      query.binary = true\n    }\n\n    if (query._result && !query._result._types) {\n      query._result._types = this._types\n    }\n\n    if (!this._queryable) {\n      process.nextTick(() => {\n        query.handleError(new Error('Client has encountered a connection error and is not queryable'), this.connection)\n      })\n      return result\n    }\n\n    if (this._ending) {\n      process.nextTick(() => {\n        query.handleError(new Error('Client was closed and is not queryable'), this.connection)\n      })\n      return result\n    }\n\n    this.queryQueue.push(query)\n    this._pulseQueryQueue()\n    return result\n  }\n\n  end(cb) {\n    this._ending = true\n\n    // if we have never connected, then end is a noop, callback immediately\n    if (!this.connection._connecting) {\n      if (cb) {\n        cb()\n      } else {\n        return this._Promise.resolve()\n      }\n    }\n\n    if (this.activeQuery || !this._queryable) {\n      // if we have an active query we need to force a disconnect\n      // on the socket - otherwise a hung query could block end forever\n      this.connection.stream.destroy()\n    } else {\n      this.connection.end()\n    }\n\n    if (cb) {\n      this.connection.once('end', cb)\n    } else {\n      return new this._Promise((resolve) => {\n        this.connection.once('end', resolve)\n      })\n    }\n  }\n}\n\n// expose a Query constructor\nClient.Query = Query\n\nmodule.exports = Client\n","'use strict'\n\nvar dns = require('dns')\n\nvar defaults = require('./defaults')\n\nvar parse = require('pg-connection-string').parse // parses a connection string\n\nvar val = function (key, config, envVar) {\n  if (envVar === undefined) {\n    envVar = process.env['PG' + key.toUpperCase()]\n  } else if (envVar === false) {\n    // do nothing ... use false\n  } else {\n    envVar = process.env[envVar]\n  }\n\n  return config[key] || envVar || defaults[key]\n}\n\nvar readSSLConfigFromEnvironment = function () {\n  switch (process.env.PGSSLMODE) {\n    case 'disable':\n      return false\n    case 'prefer':\n    case 'require':\n    case 'verify-ca':\n    case 'verify-full':\n      return true\n    case 'no-verify':\n      return { rejectUnauthorized: false }\n  }\n  return defaults.ssl\n}\n\n// Convert arg to a string, surround in single quotes, and escape single quotes and backslashes\nvar quoteParamValue = function (value) {\n  return \"'\" + ('' + value).replace(/\\\\/g, '\\\\\\\\').replace(/'/g, \"\\\\'\") + \"'\"\n}\n\nvar add = function (params, config, paramName) {\n  var value = config[paramName]\n  if (value !== undefined && value !== null) {\n    params.push(paramName + '=' + quoteParamValue(value))\n  }\n}\n\nclass ConnectionParameters {\n  constructor(config) {\n    // if a string is passed, it is a raw connection string so we parse it into a config\n    config = typeof config === 'string' ? parse(config) : config || {}\n\n    // if the config has a connectionString defined, parse IT into the config we use\n    // this will override other default values with what is stored in connectionString\n    if (config.connectionString) {\n      config = Object.assign({}, config, parse(config.connectionString))\n    }\n\n    this.user = val('user', config)\n    this.database = val('database', config)\n\n    if (this.database === undefined) {\n      this.database = this.user\n    }\n\n    this.port = parseInt(val('port', config), 10)\n    this.host = val('host', config)\n\n    // \"hiding\" the password so it doesn't show up in stack traces\n    // or if the client is console.logged\n    Object.defineProperty(this, 'password', {\n      configurable: true,\n      enumerable: false,\n      writable: true,\n      value: val('password', config),\n    })\n\n    this.binary = val('binary', config)\n    this.options = val('options', config)\n\n    this.ssl = typeof config.ssl === 'undefined' ? readSSLConfigFromEnvironment() : config.ssl\n\n    if (typeof this.ssl === 'string') {\n      if (this.ssl === 'true') {\n        this.ssl = true\n      }\n    }\n    // support passing in ssl=no-verify via connection string\n    if (this.ssl === 'no-verify') {\n      this.ssl = { rejectUnauthorized: false }\n    }\n    if (this.ssl && this.ssl.key) {\n      Object.defineProperty(this.ssl, 'key', {\n        enumerable: false,\n      })\n    }\n\n    this.client_encoding = val('client_encoding', config)\n    this.replication = val('replication', config)\n    // a domain socket begins with '/'\n    this.isDomainSocket = !(this.host || '').indexOf('/')\n\n    this.application_name = val('application_name', config, 'PGAPPNAME')\n    this.fallback_application_name = val('fallback_application_name', config, false)\n    this.statement_timeout = val('statement_timeout', config, false)\n    this.idle_in_transaction_session_timeout = val('idle_in_transaction_session_timeout', config, false)\n    this.query_timeout = val('query_timeout', config, false)\n\n    if (config.connectionTimeoutMillis === undefined) {\n      this.connect_timeout = process.env.PGCONNECT_TIMEOUT || 0\n    } else {\n      this.connect_timeout = Math.floor(config.connectionTimeoutMillis / 1000)\n    }\n\n    if (config.keepAlive === false) {\n      this.keepalives = 0\n    } else if (config.keepAlive === true) {\n      this.keepalives = 1\n    }\n\n    if (typeof config.keepAliveInitialDelayMillis === 'number') {\n      this.keepalives_idle = Math.floor(config.keepAliveInitialDelayMillis / 1000)\n    }\n  }\n\n  getLibpqConnectionString(cb) {\n    var params = []\n    add(params, this, 'user')\n    add(params, this, 'password')\n    add(params, this, 'port')\n    add(params, this, 'application_name')\n    add(params, this, 'fallback_application_name')\n    add(params, this, 'connect_timeout')\n    add(params, this, 'options')\n\n    var ssl = typeof this.ssl === 'object' ? this.ssl : this.ssl ? { sslmode: this.ssl } : {}\n    add(params, ssl, 'sslmode')\n    add(params, ssl, 'sslca')\n    add(params, ssl, 'sslkey')\n    add(params, ssl, 'sslcert')\n    add(params, ssl, 'sslrootcert')\n\n    if (this.database) {\n      params.push('dbname=' + quoteParamValue(this.database))\n    }\n    if (this.replication) {\n      params.push('replication=' + quoteParamValue(this.replication))\n    }\n    if (this.host) {\n      params.push('host=' + quoteParamValue(this.host))\n    }\n    if (this.isDomainSocket) {\n      return cb(null, params.join(' '))\n    }\n    if (this.client_encoding) {\n      params.push('client_encoding=' + quoteParamValue(this.client_encoding))\n    }\n    dns.lookup(this.host, function (err, address) {\n      if (err) return cb(err, null)\n      params.push('hostaddr=' + quoteParamValue(address))\n      return cb(null, params.join(' '))\n    })\n  }\n}\n\nmodule.exports = ConnectionParameters\n","'use strict'\n\nvar net = require('net')\nvar EventEmitter = require('events').EventEmitter\nvar util = require('util')\n\nconst { parse, serialize } = require('pg-protocol')\n\nconst flushBuffer = serialize.flush()\nconst syncBuffer = serialize.sync()\nconst endBuffer = serialize.end()\n\n// TODO(bmc) support binary mode at some point\nclass Connection extends EventEmitter {\n  constructor(config) {\n    super()\n    config = config || {}\n    this.stream = config.stream || new net.Socket()\n    this._keepAlive = config.keepAlive\n    this._keepAliveInitialDelayMillis = config.keepAliveInitialDelayMillis\n    this.lastBuffer = false\n    this.parsedStatements = {}\n    this.ssl = config.ssl || false\n    this._ending = false\n    this._emitMessage = false\n    var self = this\n    this.on('newListener', function (eventName) {\n      if (eventName === 'message') {\n        self._emitMessage = true\n      }\n    })\n  }\n\n  connect(port, host) {\n    var self = this\n\n    this._connecting = true\n    this.stream.setNoDelay(true)\n    this.stream.connect(port, host)\n\n    this.stream.once('connect', function () {\n      if (self._keepAlive) {\n        self.stream.setKeepAlive(true, self._keepAliveInitialDelayMillis)\n      }\n      self.emit('connect')\n    })\n\n    const reportStreamError = function (error) {\n      // errors about disconnections should be ignored during disconnect\n      if (self._ending && (error.code === 'ECONNRESET' || error.code === 'EPIPE')) {\n        return\n      }\n      self.emit('error', error)\n    }\n    this.stream.on('error', reportStreamError)\n\n    this.stream.on('close', function () {\n      self.emit('end')\n    })\n\n    if (!this.ssl) {\n      return this.attachListeners(this.stream)\n    }\n\n    this.stream.once('data', function (buffer) {\n      var responseCode = buffer.toString('utf8')\n      switch (responseCode) {\n        case 'S': // Server supports SSL connections, continue with a secure connection\n          break\n        case 'N': // Server does not support SSL connections\n          self.stream.end()\n          return self.emit('error', new Error('The server does not support SSL connections'))\n        default:\n          // Any other response byte, including 'E' (ErrorResponse) indicating a server error\n          self.stream.end()\n          return self.emit('error', new Error('There was an error establishing an SSL connection'))\n      }\n      var tls = require('tls')\n      const options = {\n        socket: self.stream,\n      }\n\n      if (self.ssl !== true) {\n        Object.assign(options, self.ssl)\n\n        if ('key' in self.ssl) {\n          options.key = self.ssl.key\n        }\n      }\n\n      if (net.isIP(host) === 0) {\n        options.servername = host\n      }\n      try {\n        self.stream = tls.connect(options)\n      } catch (err) {\n        return self.emit('error', err)\n      }\n      self.attachListeners(self.stream)\n      self.stream.on('error', reportStreamError)\n\n      self.emit('sslconnect')\n    })\n  }\n\n  attachListeners(stream) {\n    stream.on('end', () => {\n      this.emit('end')\n    })\n    parse(stream, (msg) => {\n      var eventName = msg.name === 'error' ? 'errorMessage' : msg.name\n      if (this._emitMessage) {\n        this.emit('message', msg)\n      }\n      this.emit(eventName, msg)\n    })\n  }\n\n  requestSsl() {\n    this.stream.write(serialize.requestSsl())\n  }\n\n  startup(config) {\n    this.stream.write(serialize.startup(config))\n  }\n\n  cancel(processID, secretKey) {\n    this._send(serialize.cancel(processID, secretKey))\n  }\n\n  password(password) {\n    this._send(serialize.password(password))\n  }\n\n  sendSASLInitialResponseMessage(mechanism, initialResponse) {\n    this._send(serialize.sendSASLInitialResponseMessage(mechanism, initialResponse))\n  }\n\n  sendSCRAMClientFinalMessage(additionalData) {\n    this._send(serialize.sendSCRAMClientFinalMessage(additionalData))\n  }\n\n  _send(buffer) {\n    if (!this.stream.writable) {\n      return false\n    }\n    return this.stream.write(buffer)\n  }\n\n  query(text) {\n    this._send(serialize.query(text))\n  }\n\n  // send parse message\n  parse(query) {\n    this._send(serialize.parse(query))\n  }\n\n  // send bind message\n  bind(config) {\n    this._send(serialize.bind(config))\n  }\n\n  // send execute message\n  execute(config) {\n    this._send(serialize.execute(config))\n  }\n\n  flush() {\n    if (this.stream.writable) {\n      this.stream.write(flushBuffer)\n    }\n  }\n\n  sync() {\n    this._ending = true\n    this._send(flushBuffer)\n    this._send(syncBuffer)\n  }\n\n  end() {\n    // 0x58 = 'X'\n    this._ending = true\n    if (!this._connecting || !this.stream.writable) {\n      this.stream.end()\n      return\n    }\n    return this.stream.write(endBuffer, () => {\n      this.stream.end()\n    })\n  }\n\n  close(msg) {\n    this._send(serialize.close(msg))\n  }\n\n  describe(msg) {\n    this._send(serialize.describe(msg))\n  }\n\n  sendCopyFromChunk(chunk) {\n    this._send(serialize.copyData(chunk))\n  }\n\n  endCopyFrom() {\n    this._send(serialize.copyDone())\n  }\n\n  sendCopyFail(msg) {\n    this._send(serialize.copyFail(msg))\n  }\n}\n\nmodule.exports = Connection\n","'use strict'\n\nmodule.exports = {\n  // database host. defaults to localhost\n  host: 'localhost',\n\n  // database user's name\n  user: process.platform === 'win32' ? process.env.USERNAME : process.env.USER,\n\n  // name of database to connect\n  database: undefined,\n\n  // database user's password\n  password: null,\n\n  // a Postgres connection string to be used instead of setting individual connection items\n  // NOTE:  Setting this value will cause it to override any other value (such as database or user) defined\n  // in the defaults object.\n  connectionString: undefined,\n\n  // database port\n  port: 5432,\n\n  // number of rows to return at a time from a prepared statement's\n  // portal. 0 will return all rows at once\n  rows: 0,\n\n  // binary result mode\n  binary: false,\n\n  // Connection pool options - see https://github.com/brianc/node-pg-pool\n\n  // number of connections to use in connection pool\n  // 0 will disable connection pooling\n  max: 10,\n\n  // max milliseconds a client can go unused before it is removed\n  // from the pool and destroyed\n  idleTimeoutMillis: 30000,\n\n  client_encoding: '',\n\n  ssl: false,\n\n  application_name: undefined,\n\n  fallback_application_name: undefined,\n\n  options: undefined,\n\n  parseInputDatesAsUTC: false,\n\n  // max milliseconds any query using this connection will execute for before timing out in error.\n  // false=unlimited\n  statement_timeout: false,\n\n  // Terminate any session with an open transaction that has been idle for longer than the specified duration in milliseconds\n  // false=unlimited\n  idle_in_transaction_session_timeout: false,\n\n  // max milliseconds to wait for query to complete (client side)\n  query_timeout: false,\n\n  connect_timeout: 0,\n\n  keepalives: 1,\n\n  keepalives_idle: 0,\n}\n\nvar pgTypes = require('pg-types')\n// save default parsers\nvar parseBigInteger = pgTypes.getTypeParser(20, 'text')\nvar parseBigIntegerArray = pgTypes.getTypeParser(1016, 'text')\n\n// parse int8 so you can get your count values as actual numbers\nmodule.exports.__defineSetter__('parseInt8', function (val) {\n  pgTypes.setTypeParser(20, 'text', val ? pgTypes.getTypeParser(23, 'text') : parseBigInteger)\n  pgTypes.setTypeParser(1016, 'text', val ? pgTypes.getTypeParser(1007, 'text') : parseBigIntegerArray)\n})\n","'use strict'\n\nvar Client = require('./client')\nvar defaults = require('./defaults')\nvar Connection = require('./connection')\nvar Pool = require('pg-pool')\n\nconst poolFactory = (Client) => {\n  return class BoundPool extends Pool {\n    constructor(options) {\n      super(options, Client)\n    }\n  }\n}\n\nvar PG = function (clientConstructor) {\n  this.defaults = defaults\n  this.Client = clientConstructor\n  this.Query = this.Client.Query\n  this.Pool = poolFactory(this.Client)\n  this._pools = []\n  this.Connection = Connection\n  this.types = require('pg-types')\n}\n\nif (typeof process.env.NODE_PG_FORCE_NATIVE !== 'undefined') {\n  module.exports = new PG(require('./native'))\n} else {\n  module.exports = new PG(Client)\n\n  // lazy require native module...the native module may not have installed\n  Object.defineProperty(module.exports, 'native', {\n    configurable: true,\n    enumerable: false,\n    get() {\n      var native = null\n      try {\n        native = new PG(require('./native'))\n      } catch (err) {\n        if (err.code !== 'MODULE_NOT_FOUND') {\n          throw err\n        }\n      }\n\n      // overwrite module.exports.native so that getter is never called again\n      Object.defineProperty(module.exports, 'native', {\n        value: native,\n      })\n\n      return native\n    },\n  })\n}\n","'use strict'\n\n// eslint-disable-next-line\nvar Native = require('pg-native')\nvar TypeOverrides = require('../type-overrides')\nvar pkg = require('../../package.json')\nvar EventEmitter = require('events').EventEmitter\nvar util = require('util')\nvar ConnectionParameters = require('../connection-parameters')\n\nvar NativeQuery = require('./query')\n\nvar Client = (module.exports = function (config) {\n  EventEmitter.call(this)\n  config = config || {}\n\n  this._Promise = config.Promise || global.Promise\n  this._types = new TypeOverrides(config.types)\n\n  this.native = new Native({\n    types: this._types,\n  })\n\n  this._queryQueue = []\n  this._ending = false\n  this._connecting = false\n  this._connected = false\n  this._queryable = true\n\n  // keep these on the object for legacy reasons\n  // for the time being. TODO: deprecate all this jazz\n  var cp = (this.connectionParameters = new ConnectionParameters(config))\n  this.user = cp.user\n\n  // \"hiding\" the password so it doesn't show up in stack traces\n  // or if the client is console.logged\n  Object.defineProperty(this, 'password', {\n    configurable: true,\n    enumerable: false,\n    writable: true,\n    value: cp.password,\n  })\n  this.database = cp.database\n  this.host = cp.host\n  this.port = cp.port\n\n  // a hash to hold named queries\n  this.namedQueries = {}\n})\n\nClient.Query = NativeQuery\n\nutil.inherits(Client, EventEmitter)\n\nClient.prototype._errorAllQueries = function (err) {\n  const enqueueError = (query) => {\n    process.nextTick(() => {\n      query.native = this.native\n      query.handleError(err)\n    })\n  }\n\n  if (this._hasActiveQuery()) {\n    enqueueError(this._activeQuery)\n    this._activeQuery = null\n  }\n\n  this._queryQueue.forEach(enqueueError)\n  this._queryQueue.length = 0\n}\n\n// connect to the backend\n// pass an optional callback to be called once connected\n// or with an error if there was a connection error\nClient.prototype._connect = function (cb) {\n  var self = this\n\n  if (this._connecting) {\n    process.nextTick(() => cb(new Error('Client has already been connected. You cannot reuse a client.')))\n    return\n  }\n\n  this._connecting = true\n\n  this.connectionParameters.getLibpqConnectionString(function (err, conString) {\n    if (err) return cb(err)\n    self.native.connect(conString, function (err) {\n      if (err) {\n        self.native.end()\n        return cb(err)\n      }\n\n      // set internal states to connected\n      self._connected = true\n\n      // handle connection errors from the native layer\n      self.native.on('error', function (err) {\n        self._queryable = false\n        self._errorAllQueries(err)\n        self.emit('error', err)\n      })\n\n      self.native.on('notification', function (msg) {\n        self.emit('notification', {\n          channel: msg.relname,\n          payload: msg.extra,\n        })\n      })\n\n      // signal we are connected now\n      self.emit('connect')\n      self._pulseQueryQueue(true)\n\n      cb()\n    })\n  })\n}\n\nClient.prototype.connect = function (callback) {\n  if (callback) {\n    this._connect(callback)\n    return\n  }\n\n  return new this._Promise((resolve, reject) => {\n    this._connect((error) => {\n      if (error) {\n        reject(error)\n      } else {\n        resolve()\n      }\n    })\n  })\n}\n\n// send a query to the server\n// this method is highly overloaded to take\n// 1) string query, optional array of parameters, optional function callback\n// 2) object query with {\n//    string query\n//    optional array values,\n//    optional function callback instead of as a separate parameter\n//    optional string name to name & cache the query plan\n//    optional string rowMode = 'array' for an array of results\n//  }\nClient.prototype.query = function (config, values, callback) {\n  var query\n  var result\n  var readTimeout\n  var readTimeoutTimer\n  var queryCallback\n\n  if (config === null || config === undefined) {\n    throw new TypeError('Client was passed a null or undefined query')\n  } else if (typeof config.submit === 'function') {\n    readTimeout = config.query_timeout || this.connectionParameters.query_timeout\n    result = query = config\n    // accept query(new Query(...), (err, res) => { }) style\n    if (typeof values === 'function') {\n      config.callback = values\n    }\n  } else {\n    readTimeout = this.connectionParameters.query_timeout\n    query = new NativeQuery(config, values, callback)\n    if (!query.callback) {\n      let resolveOut, rejectOut\n      result = new this._Promise((resolve, reject) => {\n        resolveOut = resolve\n        rejectOut = reject\n      })\n      query.callback = (err, res) => (err ? rejectOut(err) : resolveOut(res))\n    }\n  }\n\n  if (readTimeout) {\n    queryCallback = query.callback\n\n    readTimeoutTimer = setTimeout(() => {\n      var error = new Error('Query read timeout')\n\n      process.nextTick(() => {\n        query.handleError(error, this.connection)\n      })\n\n      queryCallback(error)\n\n      // we already returned an error,\n      // just do nothing if query completes\n      query.callback = () => {}\n\n      // Remove from queue\n      var index = this._queryQueue.indexOf(query)\n      if (index > -1) {\n        this._queryQueue.splice(index, 1)\n      }\n\n      this._pulseQueryQueue()\n    }, readTimeout)\n\n    query.callback = (err, res) => {\n      clearTimeout(readTimeoutTimer)\n      queryCallback(err, res)\n    }\n  }\n\n  if (!this._queryable) {\n    query.native = this.native\n    process.nextTick(() => {\n      query.handleError(new Error('Client has encountered a connection error and is not queryable'))\n    })\n    return result\n  }\n\n  if (this._ending) {\n    query.native = this.native\n    process.nextTick(() => {\n      query.handleError(new Error('Client was closed and is not queryable'))\n    })\n    return result\n  }\n\n  this._queryQueue.push(query)\n  this._pulseQueryQueue()\n  return result\n}\n\n// disconnect from the backend server\nClient.prototype.end = function (cb) {\n  var self = this\n\n  this._ending = true\n\n  if (!this._connected) {\n    this.once('connect', this.end.bind(this, cb))\n  }\n  var result\n  if (!cb) {\n    result = new this._Promise(function (resolve, reject) {\n      cb = (err) => (err ? reject(err) : resolve())\n    })\n  }\n  this.native.end(function () {\n    self._errorAllQueries(new Error('Connection terminated'))\n\n    process.nextTick(() => {\n      self.emit('end')\n      if (cb) cb()\n    })\n  })\n  return result\n}\n\nClient.prototype._hasActiveQuery = function () {\n  return this._activeQuery && this._activeQuery.state !== 'error' && this._activeQuery.state !== 'end'\n}\n\nClient.prototype._pulseQueryQueue = function (initialConnection) {\n  if (!this._connected) {\n    return\n  }\n  if (this._hasActiveQuery()) {\n    return\n  }\n  var query = this._queryQueue.shift()\n  if (!query) {\n    if (!initialConnection) {\n      this.emit('drain')\n    }\n    return\n  }\n  this._activeQuery = query\n  query.submit(this)\n  var self = this\n  query.once('_done', function () {\n    self._pulseQueryQueue()\n  })\n}\n\n// attempt to cancel an in-progress query\nClient.prototype.cancel = function (query) {\n  if (this._activeQuery === query) {\n    this.native.cancel(function () {})\n  } else if (this._queryQueue.indexOf(query) !== -1) {\n    this._queryQueue.splice(this._queryQueue.indexOf(query), 1)\n  }\n}\n\nClient.prototype.setTypeParser = function (oid, format, parseFn) {\n  return this._types.setTypeParser(oid, format, parseFn)\n}\n\nClient.prototype.getTypeParser = function (oid, format) {\n  return this._types.getTypeParser(oid, format)\n}\n","'use strict'\nmodule.exports = require('./client')\n","'use strict'\n\nvar EventEmitter = require('events').EventEmitter\nvar util = require('util')\nvar utils = require('../utils')\n\nvar NativeQuery = (module.exports = function (config, values, callback) {\n  EventEmitter.call(this)\n  config = utils.normalizeQueryConfig(config, values, callback)\n  this.text = config.text\n  this.values = config.values\n  this.name = config.name\n  this.callback = config.callback\n  this.state = 'new'\n  this._arrayMode = config.rowMode === 'array'\n\n  // if the 'row' event is listened for\n  // then emit them as they come in\n  // without setting singleRowMode to true\n  // this has almost no meaning because libpq\n  // reads all rows into memory befor returning any\n  this._emitRowEvents = false\n  this.on(\n    'newListener',\n    function (event) {\n      if (event === 'row') this._emitRowEvents = true\n    }.bind(this)\n  )\n})\n\nutil.inherits(NativeQuery, EventEmitter)\n\nvar errorFieldMap = {\n  /* eslint-disable quote-props */\n  sqlState: 'code',\n  statementPosition: 'position',\n  messagePrimary: 'message',\n  context: 'where',\n  schemaName: 'schema',\n  tableName: 'table',\n  columnName: 'column',\n  dataTypeName: 'dataType',\n  constraintName: 'constraint',\n  sourceFile: 'file',\n  sourceLine: 'line',\n  sourceFunction: 'routine',\n}\n\nNativeQuery.prototype.handleError = function (err) {\n  // copy pq error fields into the error object\n  var fields = this.native.pq.resultErrorFields()\n  if (fields) {\n    for (var key in fields) {\n      var normalizedFieldName = errorFieldMap[key] || key\n      err[normalizedFieldName] = fields[key]\n    }\n  }\n  if (this.callback) {\n    this.callback(err)\n  } else {\n    this.emit('error', err)\n  }\n  this.state = 'error'\n}\n\nNativeQuery.prototype.then = function (onSuccess, onFailure) {\n  return this._getPromise().then(onSuccess, onFailure)\n}\n\nNativeQuery.prototype.catch = function (callback) {\n  return this._getPromise().catch(callback)\n}\n\nNativeQuery.prototype._getPromise = function () {\n  if (this._promise) return this._promise\n  this._promise = new Promise(\n    function (resolve, reject) {\n      this._once('end', resolve)\n      this._once('error', reject)\n    }.bind(this)\n  )\n  return this._promise\n}\n\nNativeQuery.prototype.submit = function (client) {\n  this.state = 'running'\n  var self = this\n  this.native = client.native\n  client.native.arrayMode = this._arrayMode\n\n  var after = function (err, rows, results) {\n    client.native.arrayMode = false\n    setImmediate(function () {\n      self.emit('_done')\n    })\n\n    // handle possible query error\n    if (err) {\n      return self.handleError(err)\n    }\n\n    // emit row events for each row in the result\n    if (self._emitRowEvents) {\n      if (results.length > 1) {\n        rows.forEach((rowOfRows, i) => {\n          rowOfRows.forEach((row) => {\n            self.emit('row', row, results[i])\n          })\n        })\n      } else {\n        rows.forEach(function (row) {\n          self.emit('row', row, results)\n        })\n      }\n    }\n\n    // handle successful result\n    self.state = 'end'\n    self.emit('end', results)\n    if (self.callback) {\n      self.callback(null, results)\n    }\n  }\n\n  if (process.domain) {\n    after = process.domain.bind(after)\n  }\n\n  // named query\n  if (this.name) {\n    if (this.name.length > 63) {\n      /* eslint-disable no-console */\n      console.error('Warning! Postgres only supports 63 characters for query names.')\n      console.error('You supplied %s (%s)', this.name, this.name.length)\n      console.error('This can cause conflicts and silent errors executing queries')\n      /* eslint-enable no-console */\n    }\n    var values = (this.values || []).map(utils.prepareValue)\n\n    // check if the client has already executed this named query\n    // if so...just execute it again - skip the planning phase\n    if (client.namedQueries[this.name]) {\n      if (this.text && client.namedQueries[this.name] !== this.text) {\n        const err = new Error(`Prepared statements must be unique - '${this.name}' was used for a different statement`)\n        return after(err)\n      }\n      return client.native.execute(this.name, values, after)\n    }\n    // plan the named query the first time, then execute it\n    return client.native.prepare(this.name, this.text, values.length, function (err) {\n      if (err) return after(err)\n      client.namedQueries[self.name] = self.text\n      return self.native.execute(self.name, values, after)\n    })\n  } else if (this.values) {\n    if (!Array.isArray(this.values)) {\n      const err = new Error('Query values must be an array')\n      return after(err)\n    }\n    var vals = this.values.map(utils.prepareValue)\n    client.native.query(this.text, vals, after)\n  } else {\n    client.native.query(this.text, after)\n  }\n}\n","'use strict'\n\nconst { EventEmitter } = require('events')\n\nconst Result = require('./result')\nconst utils = require('./utils')\n\nclass Query extends EventEmitter {\n  constructor(config, values, callback) {\n    super()\n\n    config = utils.normalizeQueryConfig(config, values, callback)\n\n    this.text = config.text\n    this.values = config.values\n    this.rows = config.rows\n    this.types = config.types\n    this.name = config.name\n    this.binary = config.binary\n    // use unique portal name each time\n    this.portal = config.portal || ''\n    this.callback = config.callback\n    this._rowMode = config.rowMode\n    if (process.domain && config.callback) {\n      this.callback = process.domain.bind(config.callback)\n    }\n    this._result = new Result(this._rowMode, this.types)\n\n    // potential for multiple results\n    this._results = this._result\n    this.isPreparedStatement = false\n    this._canceledDueToError = false\n    this._promise = null\n  }\n\n  requiresPreparation() {\n    // named queries must always be prepared\n    if (this.name) {\n      return true\n    }\n    // always prepare if there are max number of rows expected per\n    // portal execution\n    if (this.rows) {\n      return true\n    }\n    // don't prepare empty text queries\n    if (!this.text) {\n      return false\n    }\n    // prepare if there are values\n    if (!this.values) {\n      return false\n    }\n    return this.values.length > 0\n  }\n\n  _checkForMultirow() {\n    // if we already have a result with a command property\n    // then we've already executed one query in a multi-statement simple query\n    // turn our results into an array of results\n    if (this._result.command) {\n      if (!Array.isArray(this._results)) {\n        this._results = [this._result]\n      }\n      this._result = new Result(this._rowMode, this.types)\n      this._results.push(this._result)\n    }\n  }\n\n  // associates row metadata from the supplied\n  // message with this query object\n  // metadata used when parsing row results\n  handleRowDescription(msg) {\n    this._checkForMultirow()\n    this._result.addFields(msg.fields)\n    this._accumulateRows = this.callback || !this.listeners('row').length\n  }\n\n  handleDataRow(msg) {\n    let row\n\n    if (this._canceledDueToError) {\n      return\n    }\n\n    try {\n      row = this._result.parseRow(msg.fields)\n    } catch (err) {\n      this._canceledDueToError = err\n      return\n    }\n\n    this.emit('row', row, this._result)\n    if (this._accumulateRows) {\n      this._result.addRow(row)\n    }\n  }\n\n  handleCommandComplete(msg, connection) {\n    this._checkForMultirow()\n    this._result.addCommandComplete(msg)\n    // need to sync after each command complete of a prepared statement\n    // if we were using a row count which results in multiple calls to _getRows\n    if (this.rows) {\n      connection.sync()\n    }\n  }\n\n  // if a named prepared statement is created with empty query text\n  // the backend will send an emptyQuery message but *not* a command complete message\n  // since we pipeline sync immediately after execute we don't need to do anything here\n  // unless we have rows specified, in which case we did not pipeline the intial sync call\n  handleEmptyQuery(connection) {\n    if (this.rows) {\n      connection.sync()\n    }\n  }\n\n  handleError(err, connection) {\n    // need to sync after error during a prepared statement\n    if (this._canceledDueToError) {\n      err = this._canceledDueToError\n      this._canceledDueToError = false\n    }\n    // if callback supplied do not emit error event as uncaught error\n    // events will bubble up to node process\n    if (this.callback) {\n      return this.callback(err)\n    }\n    this.emit('error', err)\n  }\n\n  handleReadyForQuery(con) {\n    if (this._canceledDueToError) {\n      return this.handleError(this._canceledDueToError, con)\n    }\n    if (this.callback) {\n      this.callback(null, this._results)\n    }\n    this.emit('end', this._results)\n  }\n\n  submit(connection) {\n    if (typeof this.text !== 'string' && typeof this.name !== 'string') {\n      return new Error('A query must have either text or a name. Supplying neither is unsupported.')\n    }\n    const previous = connection.parsedStatements[this.name]\n    if (this.text && previous && this.text !== previous) {\n      return new Error(`Prepared statements must be unique - '${this.name}' was used for a different statement`)\n    }\n    if (this.values && !Array.isArray(this.values)) {\n      return new Error('Query values must be an array')\n    }\n    if (this.requiresPreparation()) {\n      this.prepare(connection)\n    } else {\n      connection.query(this.text)\n    }\n    return null\n  }\n\n  hasBeenParsed(connection) {\n    return this.name && connection.parsedStatements[this.name]\n  }\n\n  handlePortalSuspended(connection) {\n    this._getRows(connection, this.rows)\n  }\n\n  _getRows(connection, rows) {\n    connection.execute({\n      portal: this.portal,\n      rows: rows,\n    })\n    // if we're not reading pages of rows send the sync command\n    // to indicate the pipeline is finished\n    if (!rows) {\n      connection.sync()\n    } else {\n      // otherwise flush the call out to read more rows\n      connection.flush()\n    }\n  }\n\n  // http://developer.postgresql.org/pgdocs/postgres/protocol-flow.html#PROTOCOL-FLOW-EXT-QUERY\n  prepare(connection) {\n    // prepared statements need sync to be called after each command\n    // complete or when an error is encountered\n    this.isPreparedStatement = true\n\n    // TODO refactor this poor encapsulation\n    if (!this.hasBeenParsed(connection)) {\n      connection.parse({\n        text: this.text,\n        name: this.name,\n        types: this.types,\n      })\n    }\n\n    // because we're mapping user supplied values to\n    // postgres wire protocol compatible values it could\n    // throw an exception, so try/catch this section\n    try {\n      connection.bind({\n        portal: this.portal,\n        statement: this.name,\n        values: this.values,\n        binary: this.binary,\n        valueMapper: utils.prepareValue,\n      })\n    } catch (err) {\n      this.handleError(err, connection)\n      return\n    }\n\n    connection.describe({\n      type: 'P',\n      name: this.portal || '',\n    })\n\n    this._getRows(connection, this.rows)\n  }\n\n  handleCopyInResponse(connection) {\n    connection.sendCopyFail('No source stream defined')\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  handleCopyData(msg, connection) {\n    // noop\n  }\n}\n\nmodule.exports = Query\n","'use strict'\n\nvar types = require('pg-types')\n\nvar matchRegexp = /^([A-Za-z]+)(?: (\\d+))?(?: (\\d+))?/\n\n// result object returned from query\n// in the 'end' event and also\n// passed as second argument to provided callback\nclass Result {\n  constructor(rowMode, types) {\n    this.command = null\n    this.rowCount = null\n    this.oid = null\n    this.rows = []\n    this.fields = []\n    this._parsers = undefined\n    this._types = types\n    this.RowCtor = null\n    this.rowAsArray = rowMode === 'array'\n    if (this.rowAsArray) {\n      this.parseRow = this._parseRowAsArray\n    }\n  }\n\n  // adds a command complete message\n  addCommandComplete(msg) {\n    var match\n    if (msg.text) {\n      // pure javascript\n      match = matchRegexp.exec(msg.text)\n    } else {\n      // native bindings\n      match = matchRegexp.exec(msg.command)\n    }\n    if (match) {\n      this.command = match[1]\n      if (match[3]) {\n        // COMMMAND OID ROWS\n        this.oid = parseInt(match[2], 10)\n        this.rowCount = parseInt(match[3], 10)\n      } else if (match[2]) {\n        // COMMAND ROWS\n        this.rowCount = parseInt(match[2], 10)\n      }\n    }\n  }\n\n  _parseRowAsArray(rowData) {\n    var row = new Array(rowData.length)\n    for (var i = 0, len = rowData.length; i < len; i++) {\n      var rawValue = rowData[i]\n      if (rawValue !== null) {\n        row[i] = this._parsers[i](rawValue)\n      } else {\n        row[i] = null\n      }\n    }\n    return row\n  }\n\n  parseRow(rowData) {\n    var row = {}\n    for (var i = 0, len = rowData.length; i < len; i++) {\n      var rawValue = rowData[i]\n      var field = this.fields[i].name\n      if (rawValue !== null) {\n        row[field] = this._parsers[i](rawValue)\n      } else {\n        row[field] = null\n      }\n    }\n    return row\n  }\n\n  addRow(row) {\n    this.rows.push(row)\n  }\n\n  addFields(fieldDescriptions) {\n    // clears field definitions\n    // multiple query statements in 1 action can result in multiple sets\n    // of rowDescriptions...eg: 'select NOW(); select 1::int;'\n    // you need to reset the fields\n    this.fields = fieldDescriptions\n    if (this.fields.length) {\n      this._parsers = new Array(fieldDescriptions.length)\n    }\n    for (var i = 0; i < fieldDescriptions.length; i++) {\n      var desc = fieldDescriptions[i]\n      if (this._types) {\n        this._parsers[i] = this._types.getTypeParser(desc.dataTypeID, desc.format || 'text')\n      } else {\n        this._parsers[i] = types.getTypeParser(desc.dataTypeID, desc.format || 'text')\n      }\n    }\n  }\n}\n\nmodule.exports = Result\n","'use strict'\nconst crypto = require('crypto')\n\nfunction startSession(mechanisms) {\n  if (mechanisms.indexOf('SCRAM-SHA-256') === -1) {\n    throw new Error('SASL: Only mechanism SCRAM-SHA-256 is currently supported')\n  }\n\n  const clientNonce = crypto.randomBytes(18).toString('base64')\n\n  return {\n    mechanism: 'SCRAM-SHA-256',\n    clientNonce,\n    response: 'n,,n=*,r=' + clientNonce,\n    message: 'SASLInitialResponse',\n  }\n}\n\nfunction continueSession(session, password, serverData) {\n  if (session.message !== 'SASLInitialResponse') {\n    throw new Error('SASL: Last message was not SASLInitialResponse')\n  }\n\n  const sv = extractVariablesFromFirstServerMessage(serverData)\n\n  if (!sv.nonce.startsWith(session.clientNonce)) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce does not start with client nonce')\n  }\n\n  var saltBytes = Buffer.from(sv.salt, 'base64')\n\n  var saltedPassword = Hi(password, saltBytes, sv.iteration)\n\n  var clientKey = createHMAC(saltedPassword, 'Client Key')\n  var storedKey = crypto.createHash('sha256').update(clientKey).digest()\n\n  var clientFirstMessageBare = 'n=*,r=' + session.clientNonce\n  var serverFirstMessage = 'r=' + sv.nonce + ',s=' + sv.salt + ',i=' + sv.iteration\n\n  var clientFinalMessageWithoutProof = 'c=biws,r=' + sv.nonce\n\n  var authMessage = clientFirstMessageBare + ',' + serverFirstMessage + ',' + clientFinalMessageWithoutProof\n\n  var clientSignature = createHMAC(storedKey, authMessage)\n  var clientProofBytes = xorBuffers(clientKey, clientSignature)\n  var clientProof = clientProofBytes.toString('base64')\n\n  var serverKey = createHMAC(saltedPassword, 'Server Key')\n  var serverSignatureBytes = createHMAC(serverKey, authMessage)\n\n  session.message = 'SASLResponse'\n  session.serverSignature = serverSignatureBytes.toString('base64')\n  session.response = clientFinalMessageWithoutProof + ',p=' + clientProof\n}\n\nfunction finalizeSession(session, serverData) {\n  if (session.message !== 'SASLResponse') {\n    throw new Error('SASL: Last message was not SASLResponse')\n  }\n\n  var serverSignature\n\n  String(serverData)\n    .split(',')\n    .forEach(function (part) {\n      switch (part[0]) {\n        case 'v':\n          serverSignature = part.substr(2)\n          break\n      }\n    })\n\n  if (serverSignature !== session.serverSignature) {\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature does not match')\n  }\n}\n\nfunction extractVariablesFromFirstServerMessage(data) {\n  var nonce, salt, iteration\n\n  String(data)\n    .split(',')\n    .forEach(function (part) {\n      switch (part[0]) {\n        case 'r':\n          nonce = part.substr(2)\n          break\n        case 's':\n          salt = part.substr(2)\n          break\n        case 'i':\n          iteration = parseInt(part.substr(2), 10)\n          break\n      }\n    })\n\n  if (!nonce) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: nonce missing')\n  }\n\n  if (!salt) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: salt missing')\n  }\n\n  if (!iteration) {\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: iteration missing')\n  }\n\n  return {\n    nonce,\n    salt,\n    iteration,\n  }\n}\n\nfunction xorBuffers(a, b) {\n  if (!Buffer.isBuffer(a)) a = Buffer.from(a)\n  if (!Buffer.isBuffer(b)) b = Buffer.from(b)\n  var res = []\n  if (a.length > b.length) {\n    for (var i = 0; i < b.length; i++) {\n      res.push(a[i] ^ b[i])\n    }\n  } else {\n    for (var j = 0; j < a.length; j++) {\n      res.push(a[j] ^ b[j])\n    }\n  }\n  return Buffer.from(res)\n}\n\nfunction createHMAC(key, msg) {\n  return crypto.createHmac('sha256', key).update(msg).digest()\n}\n\nfunction Hi(password, saltBytes, iterations) {\n  var ui1 = createHMAC(password, Buffer.concat([saltBytes, Buffer.from([0, 0, 0, 1])]))\n  var ui = ui1\n  for (var i = 0; i < iterations - 1; i++) {\n    ui1 = createHMAC(password, ui1)\n    ui = xorBuffers(ui, ui1)\n  }\n\n  return ui\n}\n\nmodule.exports = {\n  startSession,\n  continueSession,\n  finalizeSession,\n}\n","'use strict'\n\nvar types = require('pg-types')\n\nfunction TypeOverrides(userTypes) {\n  this._types = userTypes || types\n  this.text = {}\n  this.binary = {}\n}\n\nTypeOverrides.prototype.getOverrides = function (format) {\n  switch (format) {\n    case 'text':\n      return this.text\n    case 'binary':\n      return this.binary\n    default:\n      return {}\n  }\n}\n\nTypeOverrides.prototype.setTypeParser = function (oid, format, parseFn) {\n  if (typeof format === 'function') {\n    parseFn = format\n    format = 'text'\n  }\n  this.getOverrides(format)[oid] = parseFn\n}\n\nTypeOverrides.prototype.getTypeParser = function (oid, format) {\n  format = format || 'text'\n  return this.getOverrides(format)[oid] || this._types.getTypeParser(oid, format)\n}\n\nmodule.exports = TypeOverrides\n","'use strict'\n\nconst crypto = require('crypto')\n\nconst defaults = require('./defaults')\n\nfunction escapeElement(elementRepresentation) {\n  var escaped = elementRepresentation.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"')\n\n  return '\"' + escaped + '\"'\n}\n\n// convert a JS array to a postgres array literal\n// uses comma separator so won't work for types like box that use\n// a different array separator.\nfunction arrayString(val) {\n  var result = '{'\n  for (var i = 0; i < val.length; i++) {\n    if (i > 0) {\n      result = result + ','\n    }\n    if (val[i] === null || typeof val[i] === 'undefined') {\n      result = result + 'NULL'\n    } else if (Array.isArray(val[i])) {\n      result = result + arrayString(val[i])\n    } else if (val[i] instanceof Buffer) {\n      result += '\\\\\\\\x' + val[i].toString('hex')\n    } else {\n      result += escapeElement(prepareValue(val[i]))\n    }\n  }\n  result = result + '}'\n  return result\n}\n\n// converts values from javascript types\n// to their 'raw' counterparts for use as a postgres parameter\n// note: you can override this function to provide your own conversion mechanism\n// for complex types, etc...\nvar prepareValue = function (val, seen) {\n  // null and undefined are both null for postgres\n  if (val == null) {\n    return null\n  }\n  if (val instanceof Buffer) {\n    return val\n  }\n  if (ArrayBuffer.isView(val)) {\n    var buf = Buffer.from(val.buffer, val.byteOffset, val.byteLength)\n    if (buf.length === val.byteLength) {\n      return buf\n    }\n    return buf.slice(val.byteOffset, val.byteOffset + val.byteLength) // Node.js v4 does not support those Buffer.from params\n  }\n  if (val instanceof Date) {\n    if (defaults.parseInputDatesAsUTC) {\n      return dateToStringUTC(val)\n    } else {\n      return dateToString(val)\n    }\n  }\n  if (Array.isArray(val)) {\n    return arrayString(val)\n  }\n  if (typeof val === 'object') {\n    return prepareObject(val, seen)\n  }\n  return val.toString()\n}\n\nfunction prepareObject(val, seen) {\n  if (val && typeof val.toPostgres === 'function') {\n    seen = seen || []\n    if (seen.indexOf(val) !== -1) {\n      throw new Error('circular reference detected while preparing \"' + val + '\" for query')\n    }\n    seen.push(val)\n\n    return prepareValue(val.toPostgres(prepareValue), seen)\n  }\n  return JSON.stringify(val)\n}\n\nfunction pad(number, digits) {\n  number = '' + number\n  while (number.length < digits) {\n    number = '0' + number\n  }\n  return number\n}\n\nfunction dateToString(date) {\n  var offset = -date.getTimezoneOffset()\n\n  var year = date.getFullYear()\n  var isBCYear = year < 1\n  if (isBCYear) year = Math.abs(year) + 1 // negative years are 1 off their BC representation\n\n  var ret =\n    pad(year, 4) +\n    '-' +\n    pad(date.getMonth() + 1, 2) +\n    '-' +\n    pad(date.getDate(), 2) +\n    'T' +\n    pad(date.getHours(), 2) +\n    ':' +\n    pad(date.getMinutes(), 2) +\n    ':' +\n    pad(date.getSeconds(), 2) +\n    '.' +\n    pad(date.getMilliseconds(), 3)\n\n  if (offset < 0) {\n    ret += '-'\n    offset *= -1\n  } else {\n    ret += '+'\n  }\n\n  ret += pad(Math.floor(offset / 60), 2) + ':' + pad(offset % 60, 2)\n  if (isBCYear) ret += ' BC'\n  return ret\n}\n\nfunction dateToStringUTC(date) {\n  var year = date.getUTCFullYear()\n  var isBCYear = year < 1\n  if (isBCYear) year = Math.abs(year) + 1 // negative years are 1 off their BC representation\n\n  var ret =\n    pad(year, 4) +\n    '-' +\n    pad(date.getUTCMonth() + 1, 2) +\n    '-' +\n    pad(date.getUTCDate(), 2) +\n    'T' +\n    pad(date.getUTCHours(), 2) +\n    ':' +\n    pad(date.getUTCMinutes(), 2) +\n    ':' +\n    pad(date.getUTCSeconds(), 2) +\n    '.' +\n    pad(date.getUTCMilliseconds(), 3)\n\n  ret += '+00:00'\n  if (isBCYear) ret += ' BC'\n  return ret\n}\n\nfunction normalizeQueryConfig(config, values, callback) {\n  // can take in strings or config objects\n  config = typeof config === 'string' ? { text: config } : config\n  if (values) {\n    if (typeof values === 'function') {\n      config.callback = values\n    } else {\n      config.values = values\n    }\n  }\n  if (callback) {\n    config.callback = callback\n  }\n  return config\n}\n\nconst md5 = function (string) {\n  return crypto.createHash('md5').update(string, 'utf-8').digest('hex')\n}\n\n// See AuthenticationMD5Password at https://www.postgresql.org/docs/current/static/protocol-flow.html\nconst postgresMd5PasswordHash = function (user, password, salt) {\n  var inner = md5(password + user)\n  var outer = md5(Buffer.concat([Buffer.from(inner), salt]))\n  return 'md5' + outer\n}\n\nmodule.exports = {\n  prepareValue: function prepareValueWrapper(value) {\n    // this ensures that extra arguments do not get passed into prepareValue\n    // by accident, eg: from calling values.map(utils.prepareValue)\n    return prepareValue(value)\n  },\n  normalizeQueryConfig,\n  postgresMd5PasswordHash,\n  md5,\n}\n","'use strict';\n\nvar path = require('path')\n  , Stream = require('stream').Stream\n  , split = require('split2')\n  , util = require('util')\n  , defaultPort = 5432\n  , isWin = (process.platform === 'win32')\n  , warnStream = process.stderr\n;\n\n\nvar S_IRWXG = 56     //    00070(8)\n  , S_IRWXO = 7      //    00007(8)\n  , S_IFMT  = 61440  // 00170000(8)\n  , S_IFREG = 32768  //  0100000(8)\n;\nfunction isRegFile(mode) {\n    return ((mode & S_IFMT) == S_IFREG);\n}\n\nvar fieldNames = [ 'host', 'port', 'database', 'user', 'password' ];\nvar nrOfFields = fieldNames.length;\nvar passKey = fieldNames[ nrOfFields -1 ];\n\n\nfunction warn() {\n    var isWritable = (\n        warnStream instanceof Stream &&\n          true === warnStream.writable\n    );\n\n    if (isWritable) {\n        var args = Array.prototype.slice.call(arguments).concat(\"\\n\");\n        warnStream.write( util.format.apply(util, args) );\n    }\n}\n\n\nObject.defineProperty(module.exports, 'isWin', {\n    get : function() {\n        return isWin;\n    } ,\n    set : function(val) {\n        isWin = val;\n    }\n});\n\n\nmodule.exports.warnTo = function(stream) {\n    var old = warnStream;\n    warnStream = stream;\n    return old;\n};\n\nmodule.exports.getFileName = function(rawEnv){\n    var env = rawEnv || process.env;\n    var file = env.PGPASSFILE || (\n        isWin ?\n          path.join( env.APPDATA || './' , 'postgresql', 'pgpass.conf' ) :\n          path.join( env.HOME || './', '.pgpass' )\n    );\n    return file;\n};\n\nmodule.exports.usePgPass = function(stats, fname) {\n    if (Object.prototype.hasOwnProperty.call(process.env, 'PGPASSWORD')) {\n        return false;\n    }\n\n    if (isWin) {\n        return true;\n    }\n\n    fname = fname || '<unkn>';\n\n    if (! isRegFile(stats.mode)) {\n        warn('WARNING: password file \"%s\" is not a plain file', fname);\n        return false;\n    }\n\n    if (stats.mode & (S_IRWXG | S_IRWXO)) {\n        /* If password file is insecure, alert the user and ignore it. */\n        warn('WARNING: password file \"%s\" has group or world access; permissions should be u=rw (0600) or less', fname);\n        return false;\n    }\n\n    return true;\n};\n\n\nvar matcher = module.exports.match = function(connInfo, entry) {\n    return fieldNames.slice(0, -1).reduce(function(prev, field, idx){\n        if (idx == 1) {\n            // the port\n            if ( Number( connInfo[field] || defaultPort ) === Number( entry[field] ) ) {\n                return prev && true;\n            }\n        }\n        return prev && (\n            entry[field] === '*' ||\n              entry[field] === connInfo[field]\n        );\n    }, true);\n};\n\n\nmodule.exports.getPassword = function(connInfo, stream, cb) {\n    var pass;\n    var lineStream = stream.pipe(split());\n\n    function onLine(line) {\n        var entry = parseLine(line);\n        if (entry && isValidEntry(entry) && matcher(connInfo, entry)) {\n            pass = entry[passKey];\n            lineStream.end(); // -> calls onEnd(), but pass is set now\n        }\n    }\n\n    var onEnd = function() {\n        stream.destroy();\n        cb(pass);\n    };\n\n    var onErr = function(err) {\n        stream.destroy();\n        warn('WARNING: error on reading file: %s', err);\n        cb(undefined);\n    };\n\n    stream.on('error', onErr);\n    lineStream\n        .on('data', onLine)\n        .on('end', onEnd)\n        .on('error', onErr)\n    ;\n\n};\n\n\nvar parseLine = module.exports.parseLine = function(line) {\n    if (line.length < 11 || line.match(/^\\s+#/)) {\n        return null;\n    }\n\n    var curChar = '';\n    var prevChar = '';\n    var fieldIdx = 0;\n    var startIdx = 0;\n    var endIdx = 0;\n    var obj = {};\n    var isLastField = false;\n    var addToObj = function(idx, i0, i1) {\n        var field = line.substring(i0, i1);\n\n        if (! Object.hasOwnProperty.call(process.env, 'PGPASS_NO_DEESCAPE')) {\n            field = field.replace(/\\\\([:\\\\])/g, '$1');\n        }\n\n        obj[ fieldNames[idx] ] = field;\n    };\n\n    for (var i = 0 ; i < line.length-1 ; i += 1) {\n        curChar = line.charAt(i+1);\n        prevChar = line.charAt(i);\n\n        isLastField = (fieldIdx == nrOfFields-1);\n\n        if (isLastField) {\n            addToObj(fieldIdx, startIdx);\n            break;\n        }\n\n        if (i >= 0 && curChar == ':' && prevChar !== '\\\\') {\n            addToObj(fieldIdx, startIdx, i+1);\n\n            startIdx = i+2;\n            fieldIdx += 1;\n        }\n    }\n\n    obj = ( Object.keys(obj).length === nrOfFields ) ? obj : null;\n\n    return obj;\n};\n\n\nvar isValidEntry = module.exports.isValidEntry = function(entry){\n    var rules = {\n        // host\n        0 : function(x){\n            return x.length > 0;\n        } ,\n        // port\n        1 : function(x){\n            if (x === '*') {\n                return true;\n            }\n            x = Number(x);\n            return (\n                isFinite(x) &&\n                  x > 0 &&\n                  x < 9007199254740992 &&\n                  Math.floor(x) === x\n            );\n        } ,\n        // database\n        2 : function(x){\n            return x.length > 0;\n        } ,\n        // username\n        3 : function(x){\n            return x.length > 0;\n        } ,\n        // password\n        4 : function(x){\n            return x.length > 0;\n        }\n    };\n\n    for (var idx = 0 ; idx < fieldNames.length ; idx += 1) {\n        var rule = rules[idx];\n        var value = entry[ fieldNames[idx] ] || '';\n\n        var res = rule(value);\n        if (!res) {\n            return false;\n        }\n    }\n\n    return true;\n};\n\n","'use strict';\n\nvar path = require('path')\n  , fs = require('fs')\n  , helper = require('./helper.js')\n;\n\n\nmodule.exports = function(connInfo, cb) {\n    var file = helper.getFileName();\n    \n    fs.stat(file, function(err, stat){\n        if (err || !helper.usePgPass(stat, file)) {\n            return cb(undefined);\n        }\n\n        var st = fs.createReadStream(file);\n\n        helper.getPassword(connInfo, st, cb);\n    });\n};\n\nmodule.exports.warnTo = helper.warnTo;\n","'use strict'\n\nexports.parse = function (source, transform) {\n  return new ArrayParser(source, transform).parse()\n}\n\nclass ArrayParser {\n  constructor (source, transform) {\n    this.source = source\n    this.transform = transform || identity\n    this.position = 0\n    this.entries = []\n    this.recorded = []\n    this.dimension = 0\n  }\n\n  isEof () {\n    return this.position >= this.source.length\n  }\n\n  nextCharacter () {\n    var character = this.source[this.position++]\n    if (character === '\\\\') {\n      return {\n        value: this.source[this.position++],\n        escaped: true\n      }\n    }\n    return {\n      value: character,\n      escaped: false\n    }\n  }\n\n  record (character) {\n    this.recorded.push(character)\n  }\n\n  newEntry (includeEmpty) {\n    var entry\n    if (this.recorded.length > 0 || includeEmpty) {\n      entry = this.recorded.join('')\n      if (entry === 'NULL' && !includeEmpty) {\n        entry = null\n      }\n      if (entry !== null) entry = this.transform(entry)\n      this.entries.push(entry)\n      this.recorded = []\n    }\n  }\n\n  consumeDimensions () {\n    if (this.source[0] === '[') {\n      while (!this.isEof()) {\n        var char = this.nextCharacter()\n        if (char.value === '=') break\n      }\n    }\n  }\n\n  parse (nested) {\n    var character, parser, quote\n    this.consumeDimensions()\n    while (!this.isEof()) {\n      character = this.nextCharacter()\n      if (character.value === '{' && !quote) {\n        this.dimension++\n        if (this.dimension > 1) {\n          parser = new ArrayParser(this.source.substr(this.position - 1), this.transform)\n          this.entries.push(parser.parse(true))\n          this.position += parser.position - 2\n        }\n      } else if (character.value === '}' && !quote) {\n        this.dimension--\n        if (!this.dimension) {\n          this.newEntry()\n          if (nested) return this.entries\n        }\n      } else if (character.value === '\"' && !character.escaped) {\n        if (quote) this.newEntry(true)\n        quote = !quote\n      } else if (character.value === ',' && !quote) {\n        this.newEntry()\n      } else {\n        this.record(character.value)\n      }\n    }\n    if (this.dimension !== 0) {\n      throw new Error('array dimension not balanced')\n    }\n    return this.entries\n  }\n}\n\nfunction identity (value) {\n  return value\n}\n","'use strict'\n\nmodule.exports = function parseBytea (input) {\n  if (/^\\\\x/.test(input)) {\n    // new 'hex' style response (pg >9.0)\n    return new Buffer(input.substr(2), 'hex')\n  }\n  var output = ''\n  var i = 0\n  while (i < input.length) {\n    if (input[i] !== '\\\\') {\n      output += input[i]\n      ++i\n    } else {\n      if (/[0-7]{3}/.test(input.substr(i + 1, 3))) {\n        output += String.fromCharCode(parseInt(input.substr(i + 1, 3), 8))\n        i += 4\n      } else {\n        var backslashes = 1\n        while (i + backslashes < input.length && input[i + backslashes] === '\\\\') {\n          backslashes++\n        }\n        for (var k = 0; k < Math.floor(backslashes / 2); ++k) {\n          output += '\\\\'\n        }\n        i += Math.floor(backslashes / 2) * 2\n      }\n    }\n  }\n  return new Buffer(output, 'binary')\n}\n","'use strict'\n\nvar DATE_TIME = /(\\d{1,})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})(\\.\\d{1,})?.*?( BC)?$/\nvar DATE = /^(\\d{1,})-(\\d{2})-(\\d{2})( BC)?$/\nvar TIME_ZONE = /([Z+-])(\\d{2})?:?(\\d{2})?:?(\\d{2})?/\nvar INFINITY = /^-?infinity$/\n\nmodule.exports = function parseDate (isoDate) {\n  if (INFINITY.test(isoDate)) {\n    // Capitalize to Infinity before passing to Number\n    return Number(isoDate.replace('i', 'I'))\n  }\n  var matches = DATE_TIME.exec(isoDate)\n\n  if (!matches) {\n    // Force YYYY-MM-DD dates to be parsed as local time\n    return getDate(isoDate) || null\n  }\n\n  var isBC = !!matches[8]\n  var year = parseInt(matches[1], 10)\n  if (isBC) {\n    year = bcYearToNegativeYear(year)\n  }\n\n  var month = parseInt(matches[2], 10) - 1\n  var day = matches[3]\n  var hour = parseInt(matches[4], 10)\n  var minute = parseInt(matches[5], 10)\n  var second = parseInt(matches[6], 10)\n\n  var ms = matches[7]\n  ms = ms ? 1000 * parseFloat(ms) : 0\n\n  var date\n  var offset = timeZoneOffset(isoDate)\n  if (offset != null) {\n    date = new Date(Date.UTC(year, month, day, hour, minute, second, ms))\n\n    // Account for years from 0 to 99 being interpreted as 1900-1999\n    // by Date.UTC / the multi-argument form of the Date constructor\n    if (is0To99(year)) {\n      date.setUTCFullYear(year)\n    }\n\n    if (offset !== 0) {\n      date.setTime(date.getTime() - offset)\n    }\n  } else {\n    date = new Date(year, month, day, hour, minute, second, ms)\n\n    if (is0To99(year)) {\n      date.setFullYear(year)\n    }\n  }\n\n  return date\n}\n\nfunction getDate (isoDate) {\n  var matches = DATE.exec(isoDate)\n  if (!matches) {\n    return\n  }\n\n  var year = parseInt(matches[1], 10)\n  var isBC = !!matches[4]\n  if (isBC) {\n    year = bcYearToNegativeYear(year)\n  }\n\n  var month = parseInt(matches[2], 10) - 1\n  var day = matches[3]\n  // YYYY-MM-DD will be parsed as local time\n  var date = new Date(year, month, day)\n\n  if (is0To99(year)) {\n    date.setFullYear(year)\n  }\n\n  return date\n}\n\n// match timezones:\n// Z (UTC)\n// -05\n// +06:30\nfunction timeZoneOffset (isoDate) {\n  if (isoDate.endsWith('+00')) {\n    return 0\n  }\n\n  var zone = TIME_ZONE.exec(isoDate.split(' ')[1])\n  if (!zone) return\n  var type = zone[1]\n\n  if (type === 'Z') {\n    return 0\n  }\n  var sign = type === '-' ? -1 : 1\n  var offset = parseInt(zone[2], 10) * 3600 +\n    parseInt(zone[3] || 0, 10) * 60 +\n    parseInt(zone[4] || 0, 10)\n\n  return offset * sign * 1000\n}\n\nfunction bcYearToNegativeYear (year) {\n  // Account for numerical difference between representations of BC years\n  // See: https://github.com/bendrucker/postgres-date/issues/5\n  return -(year - 1)\n}\n\nfunction is0To99 (num) {\n  return num >= 0 && num < 100\n}\n","'use strict'\n\nvar extend = require('xtend/mutable')\n\nmodule.exports = PostgresInterval\n\nfunction PostgresInterval (raw) {\n  if (!(this instanceof PostgresInterval)) {\n    return new PostgresInterval(raw)\n  }\n  extend(this, parse(raw))\n}\nvar properties = ['seconds', 'minutes', 'hours', 'days', 'months', 'years']\nPostgresInterval.prototype.toPostgres = function () {\n  var filtered = properties.filter(this.hasOwnProperty, this)\n\n  // In addition to `properties`, we need to account for fractions of seconds.\n  if (this.milliseconds && filtered.indexOf('seconds') < 0) {\n    filtered.push('seconds')\n  }\n\n  if (filtered.length === 0) return '0'\n  return filtered\n    .map(function (property) {\n      var value = this[property] || 0\n\n      // Account for fractional part of seconds,\n      // remove trailing zeroes.\n      if (property === 'seconds' && this.milliseconds) {\n        value = (value + this.milliseconds / 1000).toFixed(6).replace(/\\.?0+$/, '')\n      }\n\n      return value + ' ' + property\n    }, this)\n    .join(' ')\n}\n\nvar propertiesISOEquivalent = {\n  years: 'Y',\n  months: 'M',\n  days: 'D',\n  hours: 'H',\n  minutes: 'M',\n  seconds: 'S'\n}\nvar dateProperties = ['years', 'months', 'days']\nvar timeProperties = ['hours', 'minutes', 'seconds']\n// according to ISO 8601\nPostgresInterval.prototype.toISOString = PostgresInterval.prototype.toISO = function () {\n  var datePart = dateProperties\n    .map(buildProperty, this)\n    .join('')\n\n  var timePart = timeProperties\n    .map(buildProperty, this)\n    .join('')\n\n  return 'P' + datePart + 'T' + timePart\n\n  function buildProperty (property) {\n    var value = this[property] || 0\n\n    // Account for fractional part of seconds,\n    // remove trailing zeroes.\n    if (property === 'seconds' && this.milliseconds) {\n      value = (value + this.milliseconds / 1000).toFixed(6).replace(/0+$/, '')\n    }\n\n    return value + propertiesISOEquivalent[property]\n  }\n}\n\nvar NUMBER = '([+-]?\\\\d+)'\nvar YEAR = NUMBER + '\\\\s+years?'\nvar MONTH = NUMBER + '\\\\s+mons?'\nvar DAY = NUMBER + '\\\\s+days?'\nvar TIME = '([+-])?([\\\\d]*):(\\\\d\\\\d):(\\\\d\\\\d)\\\\.?(\\\\d{1,6})?'\nvar INTERVAL = new RegExp([YEAR, MONTH, DAY, TIME].map(function (regexString) {\n  return '(' + regexString + ')?'\n})\n  .join('\\\\s*'))\n\n// Positions of values in regex match\nvar positions = {\n  years: 2,\n  months: 4,\n  days: 6,\n  hours: 9,\n  minutes: 10,\n  seconds: 11,\n  milliseconds: 12\n}\n// We can use negative time\nvar negatives = ['hours', 'minutes', 'seconds', 'milliseconds']\n\nfunction parseMilliseconds (fraction) {\n  // add omitted zeroes\n  var microseconds = fraction + '000000'.slice(fraction.length)\n  return parseInt(microseconds, 10) / 1000\n}\n\nfunction parse (interval) {\n  if (!interval) return {}\n  var matches = INTERVAL.exec(interval)\n  var isNegative = matches[8] === '-'\n  return Object.keys(positions)\n    .reduce(function (parsed, property) {\n      var position = positions[property]\n      var value = matches[position]\n      // no empty string\n      if (!value) return parsed\n      // milliseconds are actually microseconds (up to 6 digits)\n      // with omitted trailing zeroes.\n      value = property === 'milliseconds'\n        ? parseMilliseconds(value)\n        : parseInt(value, 10)\n      // no zeros\n      if (!value) return parsed\n      if (isNegative && ~negatives.indexOf(property)) {\n        value *= -1\n      }\n      parsed[property] = value\n      return parsed\n    }, {})\n}\n","/*\nCopyright (c) 2014-2018, Matteo Collina <hello@matteocollina.com>\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\nIN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n'use strict'\n\nconst { Transform } = require('readable-stream')\nconst { StringDecoder } = require('string_decoder')\nconst kLast = Symbol('last')\nconst kDecoder = Symbol('decoder')\n\nfunction transform (chunk, enc, cb) {\n  var list\n  if (this.overflow) { // Line buffer is full. Skip to start of next line.\n    var buf = this[kDecoder].write(chunk)\n    list = buf.split(this.matcher)\n\n    if (list.length === 1) return cb() // Line ending not found. Discard entire chunk.\n\n    // Line ending found. Discard trailing fragment of previous line and reset overflow state.\n    list.shift()\n    this.overflow = false\n  } else {\n    this[kLast] += this[kDecoder].write(chunk)\n    list = this[kLast].split(this.matcher)\n  }\n\n  this[kLast] = list.pop()\n\n  for (var i = 0; i < list.length; i++) {\n    try {\n      push(this, this.mapper(list[i]))\n    } catch (error) {\n      return cb(error)\n    }\n  }\n\n  this.overflow = this[kLast].length > this.maxLength\n  if (this.overflow && !this.skipOverflow) return cb(new Error('maximum buffer reached'))\n\n  cb()\n}\n\nfunction flush (cb) {\n  // forward any gibberish left in there\n  this[kLast] += this[kDecoder].end()\n\n  if (this[kLast]) {\n    try {\n      push(this, this.mapper(this[kLast]))\n    } catch (error) {\n      return cb(error)\n    }\n  }\n\n  cb()\n}\n\nfunction push (self, val) {\n  if (val !== undefined) {\n    self.push(val)\n  }\n}\n\nfunction noop (incoming) {\n  return incoming\n}\n\nfunction split (matcher, mapper, options) {\n  // Set defaults for any arguments not supplied.\n  matcher = matcher || /\\r?\\n/\n  mapper = mapper || noop\n  options = options || {}\n\n  // Test arguments explicitly.\n  switch (arguments.length) {\n    case 1:\n      // If mapper is only argument.\n      if (typeof matcher === 'function') {\n        mapper = matcher\n        matcher = /\\r?\\n/\n      // If options is only argument.\n      } else if (typeof matcher === 'object' && !(matcher instanceof RegExp)) {\n        options = matcher\n        matcher = /\\r?\\n/\n      }\n      break\n\n    case 2:\n      // If mapper and options are arguments.\n      if (typeof matcher === 'function') {\n        options = mapper\n        mapper = matcher\n        matcher = /\\r?\\n/\n      // If matcher and options are arguments.\n      } else if (typeof mapper === 'object') {\n        options = mapper\n        mapper = noop\n      }\n  }\n\n  options = Object.assign({}, options)\n  options.transform = transform\n  options.flush = flush\n  options.readableObjectMode = true\n\n  const stream = new Transform(options)\n\n  stream[kLast] = ''\n  stream[kDecoder] = new StringDecoder('utf8')\n  stream.matcher = matcher\n  stream.mapper = mapper\n  stream.maxLength = options.maxLength\n  stream.skipOverflow = options.skipOverflow\n  stream.overflow = false\n\n  return stream\n}\n\nmodule.exports = split\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend(target) {\n    for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","import { Client } from 'pg'\r\n\r\nconst { PG_HOST, PG_PORT, PG_DATABASE, PG_USERNAME, PG_PASSWORD } = process.env;\r\nconst dbOptions = {\r\n  host: PG_HOST,\r\n  port: PG_PORT,\r\n  database: PG_DATABASE,\r\n  user: PG_USERNAME,\r\n  password: PG_PASSWORD,\r\n  ssl: {\r\n    rejectUnauthorized: false,\r\n  },\r\n  connectionTimeoutMillis: 5000\r\n}\r\n\r\nexport const getAllProducts = async () => {\r\n\r\n  const client = new Client(dbOptions)\r\n  await client.connect()\r\n\r\n  try {\r\n\r\n    const { rows: products } = await client.query(`select products.*, stocks.count FROM products LEFT JOIN stocks ON stocks.product_id=products.id`)\r\n\r\n    return {\r\n      statusCode: 200,\r\n      body: JSON.stringify({\r\n        products,\r\n        count: products.length\r\n      }),\r\n    };\r\n  } catch (error) {\r\n    console.error('Error durring database request executing: ',error)\r\n  } finally {\r\n    client.end()\r\n  }\r\n\r\n};\r\n","import { Client } from 'pg'\r\n\r\nconst { PG_HOST, PG_PORT, PG_DATABASE, PG_USERNAME, PG_PASSWORD } = process.env;\r\nconst dbOptions = {\r\n  host: PG_HOST,\r\n  port: PG_PORT,\r\n  database: PG_DATABASE,\r\n  user: PG_USERNAME,\r\n  password: PG_PASSWORD,\r\n  ssl: {\r\n    rejectUnauthorized: false,\r\n  },\r\n  connectionTimeoutMillis: 5000\r\n}\r\n\r\nexport const getProductById = async (event) => {\r\n  const client = new Client(dbOptions)\r\n  await client.connect()\r\n\r\n  const params = event.pathParameters || {};\r\n  try {\r\n    const { rows: product } = await client.query('select products.*, stocks.count FROM products LEFT JOIN stocks ON stocks.product_id=product_id where id = $1', [params.id]);\r\n    return {\r\n      statusCode: 200,\r\n      body: JSON.stringify(product),\r\n    };\r\n  } catch (error) {\r\n    console.error('Error durring database request executing:'.error)\r\n  } finally {\r\n    client.end()\r\n  }\r\n\r\n};\r\n","import { Client } from 'pg'\r\n\r\nconst { PG_HOST, PG_PORT, PG_DATABASE, PG_USERNAME, PG_PASSWORD } = process.env;\r\nconst dbOptions = {\r\n    host: PG_HOST,\r\n    port: PG_PORT,\r\n    database: PG_DATABASE,\r\n    user: PG_USERNAME,\r\n    password: PG_PASSWORD,\r\n    ssl: {\r\n        rejectUnauthorized: false,\r\n    },\r\n    connectionTimeoutMillis: 5000\r\n}\r\n\r\nexport const createProduct = async (event) => {\r\n\r\n    const client = new Client(dbOptions)\r\n    await client.connect()\r\n\r\n    const body = JSON.parse(event.body || '{}');\r\n\r\n    const {\r\n        name, image, description, brand, category, price, rating, numReviews, count\r\n    } = body;\r\n\r\n    try {\r\n        const newProduct = await client.query(\r\n            `INSERT INTO products(name, image, description, brand, category, price, rating, numReviews) values($1, $2, $3, $4, $5, $6, $7, $8) RETURNING *`,\r\n            [name, image, description, brand, category, price, rating, numReviews]\r\n        );\r\n\r\n        const newProductStock = await client.query(`INSERT INTO stocks(count) values($1) RETURNING *`, [count]);\r\n\r\n        return {\r\n            statusCode: 201,\r\n            body: JSON.stringify({...newProduct.rows[0], ...newProductStock.rows[0]}),\r\n        };\r\n    } catch (error) {\r\n        console.error('Error durring database request executing: ', error)\r\n    } finally {\r\n        client.end()\r\n    }\r\n\r\n};\r\n","module.exports = require(\"assert\");;","module.exports = require(\"crypto\");;","module.exports = require(\"dns\");;","module.exports = require(\"events\");;","module.exports = require(\"fs\");;","module.exports = require(\"net\");;","module.exports = require(\"path\");;","module.exports = require(\"readable-stream\");;","module.exports = require(\"stream\");;","module.exports = require(\"string_decoder\");;","module.exports = require(\"tls\");;","module.exports = require(\"url\");;","module.exports = require(\"util\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(888);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}